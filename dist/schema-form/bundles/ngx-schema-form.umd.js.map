{"version":3,"file":"ngx-schema-form.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/schema-form/src/lib/model/actionregistry.ts","../../../projects/schema-form/src/lib/model/bindingregistry.ts","../../../projects/schema-form/src/lib/model/formproperty.ts","../../../projects/schema-form/src/lib/model/typemapping.ts","../../../projects/schema-form/src/lib/template-schema/field/field.ts","../../../projects/schema-form/src/lib/model/formpropertyfactory.ts","../../../projects/schema-form/src/lib/model/atomicproperty.ts","../../../projects/schema-form/src/lib/model/objectproperty.ts","../../../projects/schema-form/src/lib/model/arrayproperty.ts","../../../projects/schema-form/src/lib/model/stringproperty.ts","../../../projects/schema-form/src/lib/model/booleanproperty.ts","../../../projects/schema-form/src/lib/model/numberproperty.ts","../../../projects/schema-form/src/lib/model/validatorregistry.ts","../../../projects/schema-form/src/lib/model/utils.ts","../../../projects/schema-form/src/lib/model/schemapreprocessor.ts","../../../projects/schema-form/src/lib/schemavalidatorfactory.ts","../../../projects/schema-form/src/lib/widgetregistry.ts","../../../projects/schema-form/src/lib/widgetfactory.ts","../../../projects/schema-form/src/lib/terminator.service.ts","../../../projects/schema-form/src/lib/property-binding-registry.ts","../../../projects/schema-form/src/lib/expression-compiler-factory.ts","../../../projects/schema-form/src/lib/log.service.ts","../../../projects/schema-form/src/lib/form.component.ts","../../../projects/schema-form/src/lib/formelement.component.ts","../../../projects/schema-form/src/lib/formelement.action.component.ts","../../../projects/schema-form/src/lib/widgetchooser.component.ts","../../../projects/schema-form/src/lib/widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/array/array.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/button/button.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/object/object.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/checkbox/checkbox.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/file/file.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/integer/integer.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/textarea/textarea.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/radio/radio.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/range/range.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/select/select.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/string/string.widget.ts","../../../projects/schema-form/src/lib/defaultwidgets/defaultwidgetregistry.ts","../../../projects/schema-form/src/lib/defaultwidgets/_directives/disableControl.directive.ts","../../../projects/schema-form/src/lib/default.widget.ts","../../../projects/schema-form/src/lib/schema-form.module.ts","../../../projects/schema-form/src/lib/template-schema/template-schema.service.ts","../../../projects/schema-form/src/lib/template-schema/template-schema-element.ts","../../../projects/schema-form/src/lib/template-schema/button/button.component.ts","../../../projects/schema-form/src/lib/template-schema/field/field-parent.ts","../../../projects/schema-form/src/lib/template-schema/field/item/item.component.ts","../../../projects/schema-form/src/lib/template-schema/field/field.component.ts","../../../projects/schema-form/src/lib/template-schema/template-schema.directive.ts","../../../projects/schema-form/src/lib/template-schema/template-schema.module.ts","../../../projects/schema-form/src/public_api.ts","../../../projects/schema-form/src/ngx-schema-form.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Action } from './action';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class ActionRegistry {\n  actions: {[key: string]: Action} = {};\n\n  clear() {\n    this.actions = {};\n  }\n\n  register(actionId: string, action: Action) {\n    this.actions[actionId] = action;\n  }\n\n  get(actionId: string) {\n    return this.actions[actionId];\n  }\n}\n","import {Binding} from './binding';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class BindingRegistry {\n  bindings: Binding[] = [];\n\n  clear() {\n    this.bindings = [];\n  }\n\n  register(path: string, binding: Binding | Binding[]) {\n    this.bindings[path] = [].concat(binding);\n  }\n\n  get(path: string): Binding[] {\n    return this.bindings[path];\n  }\n}\n","import {BehaviorSubject, combineLatest} from 'rxjs';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\n\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\nimport {PropertyBindingRegistry} from '../property-binding-registry';\nimport { ExpressionCompilerFactory, ExpressionCompilerVisibilityIf } from '../expression-compiler-factory';\nimport { ISchema, TSchemaPropertyType } from './ISchema';\nimport { LogService } from '../log.service';\n\nexport abstract class FormProperty {\n  public schemaValidator: Function;\n  public expressionCompilerVisibiltyIf: ExpressionCompilerVisibilityIf;\n\n  _value: any = null;\n  _errors: any = null;\n  private _valueChanges = new BehaviorSubject<any>(null);\n  private _errorsChanges = new BehaviorSubject<any>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup;\n  private _path: string;\n  _propertyBindingRegistry: PropertyBindingRegistry;\n  __canonicalPath: string;\n  __canonicalPathNotation: string;\n\n  /**\n   * Provides the unique path of this form element.<br/>\n   * E.g.:\n   * <code>/garage/cars</code>,<br/>\n   * <code>/shop/book/0/page/1/</code>\n   */\n  get _canonicalPath() { return this.__canonicalPath; }\n  set _canonicalPath(canonicalPath: string) {\n    this.__canonicalPath = canonicalPath;\n    this.__canonicalPathNotation = (this.__canonicalPath||'')\n      .replace(new RegExp('^/', 'ig'), '')\n      .replace(new RegExp('/$', 'ig'), '')\n      .replace(new RegExp('/', 'ig'), '.');\n  }\n  /**\n   * Uses the unique path provided by the property <code>_canonicalPath</code><br/>\n   * but converts it to a HTML Element Attribute ID compliant format.<br/>\n   * E.g.:\n   * <code>garage.cars</code>,<br/>\n   * <code>shop.book.0.page.1.</code>\n   */\n  get canonicalPathNotation() { return this.__canonicalPathNotation; }\n\n  private _rootName;\n  /**\n   * Provides the HTML Element Attribute ID/NAME compliant representation\n   * of the root element.<br/>\n   * Represents the HTML FORM NAME.<br/>\n   * Only the root <code>FormProperty</code> will provide a value here.\n   */\n  get rootName() { return this._rootName; }\n\n  constructor(schemaValidatorFactory: SchemaValidatorFactory,\n              private validatorRegistry: ValidatorRegistry,\n              expressionCompilerFactory: ExpressionCompilerFactory,\n              public schema: ISchema,\n              parent: PropertyGroup,\n              path: string,\n              protected logger: LogService) {\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(this.schema);\n    this.expressionCompilerVisibiltyIf = expressionCompilerFactory.createExpressionCompilerVisibilityIf();\n\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = <PropertyGroup><any>this;\n      this._rootName = this.createRootName();\n    }\n    this._path = path;\n  }\n\n  /**\n   * Creates the HTML ID and NAME attribute compliant string.\n   */\n  private createRootName(): string {\n    if (this.schema && this.schema['name']) {\n      return this._rootName = this.schema['name'].replace(new RegExp('[\\\\s]+', 'ig'), '_')\n    }\n    return '';\n  }\n\n  public get valueChanges() {\n    return this._valueChanges;\n  }\n\n  public get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  public get type(): TSchemaPropertyType {\n    return this.schema.type;\n  }\n\n  public get parent(): PropertyGroup {\n    return this._parent;\n  }\n\n  public get root(): PropertyGroup {\n    return this._root || <PropertyGroup><any>this;\n  }\n\n  public get path(): string {\n    return this._path;\n  }\n\n  public get value() {\n    return this._value;\n  }\n\n  public get visible() {\n    return this._visible;\n  }\n\n  public get valid() {\n    return this._errors === null;\n  }\n\n  public abstract setValue(value: any, onlySelf: boolean);\n\n  public abstract reset(value: any, onlySelf: boolean);\n\n  public updateValueAndValidity(onlySelf = false, emitEvent = true) {\n    this._updateValue();\n\n    if (emitEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    this._runValidation();\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitEvent);\n    }\n\n  }\n\n  /**\n   * @internal\n   */\n  public abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  public abstract _updateValue();\n\n  /**\n   * @internal\n   */\n  public _runValidation(): any {\n    let errors = this.schemaValidator(this._value) || [];\n    let customValidator = this.validatorRegistry.get(this.path);\n    if (customValidator) {\n      let customErrors = customValidator(this.value, this, this.findRoot());\n      errors = this.mergeErrors(errors, customErrors);\n    }\n    if (errors.length === 0) {\n      errors = null;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors, newErrors) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  private setErrors(errors) {\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n  }\n\n  public extendErrors(errors) {\n    errors = this.mergeErrors(this._errors || [], errors);\n    this.setErrors(errors);\n  }\n\n  searchProperty(path: string): FormProperty {\n    let prop: FormProperty = this;\n    let base: PropertyGroup = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  public findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return <PropertyGroup>property;\n  }\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    this.updateValueAndValidity();\n  }\n\n  /**\n   * Making use of the expression compiler for the <code>visibleIf</code> condition\n   * @param sourceProperty The source property where the `visibleIf` condition is set.\n   * @param targetProperty  The target property what provided the `value` on which the `visibleIf` condition will be checked against. May be `null` or `undefined`\n   * @param dependencyPath The dependency path of the `targetProperty`\n   * @param value The value of the `targetProperty` to check the `visiblityIf` condintion against. May be `null` or `undefined`\n   * @param expression The value or expression to check against the `value` for the `targetProperty`. May be `null` or `undefined`\n   */\n  private __evaluateVisibilityIf(\n    sourceProperty: FormProperty,\n    targetProperty: FormProperty,\n    dependencyPath: string,\n    value: any = '',\n    expression: string | string[] | number | number[] | boolean | boolean[]): boolean {\n    try {\n      let valid = false\n      const expArray = Array.isArray(expression) ? expression : [expression]\n      for (const expString of expArray) {\n        if (typeof expString === 'boolean') {\n          valid = !expString ? !value : value\n        } else if (typeof expString === 'number') {\n          valid = !!value ? `${expString}` === `${value}` : false;\n        } else if (-1 !== `${expString}`.indexOf('$ANY$')) {\n          valid = value && value.length > 0;\n        } else if (0 === `${expString}`.indexOf('$EXP$')) {\n          const _expresssion = (expString as string).substring('$EXP$'.length);\n          valid = true === this.expressionCompilerVisibiltyIf.evaluate(_expresssion, {\n            source: sourceProperty,\n            target: targetProperty\n          })\n        } else {\n          valid = !!value ? `${expString}` === `${value}` : false;\n        }\n        if (valid) {\n          break\n        }\n      }\n      return valid\n    } catch (error) {\n      this.logger.error('Error processing \"VisibileIf\" expression for path: ', dependencyPath,\n        `source - ${(sourceProperty ? sourceProperty._canonicalPath : '<no-sourceProperty>')}: `, sourceProperty,\n        `target - ${(targetProperty ? targetProperty._canonicalPath : '<no-targetProperty>')}: `, targetProperty,\n        'value:', value,\n        'expression: ', expression,\n        'error: ', error)\n    }\n  }\n\n  /**\n   * binds visibility conditions of type `oneOf` and `allOf`.\n   * @returns `true` if any visibility binding of type `oneOf` or `allOf` has been processed. Otherwise `false`.\n   */\n  private __bindVisibility_oneOf_or_allOf(): boolean {\n    /**\n     * <pre>\n     *     \"oneOf\":[{\n     *         \"path\":[\"value\",\"value\"]\n     *     },{\n     *         \"path\":[\"value\",\"value\"]\n     *     }]\n     *     </pre>\n     * <pre>\n     *     \"allOf\":[{\n     *         \"path\":[\"value\",\"value\"]\n     *     },{\n     *         \"path\":[\"value\",\"value\"]\n     *     }]\n     *     </pre>\n     */\n    const visibleIfProperty = this.schema.visibleIf;\n    const visibleIfOf = (visibleIfProperty || {}).oneOf || (visibleIfProperty || {}).allOf;\n    if (visibleIfOf) {\n      for (const visibleIf of visibleIfOf) {\n        if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n          this.setVisible(false);\n        } else if (visibleIf !== undefined) {\n          const propertiesBinding = [];\n          for (const dependencyPath in visibleIf) {\n            if (visibleIf.hasOwnProperty(dependencyPath)) {\n              const properties = this.findProperties(this, dependencyPath);\n              if ((properties || []).length) {\n                for (const property of properties) {\n                  if (property) {\n                    let valueCheck;\n                    if (this.schema.visibleIf.oneOf) {\n                      const _chk = (value) => {\n                        for (const item of this.schema.visibleIf.oneOf) {\n                          for (const depPath of Object.keys(item)) {\n                            const props = this.findProperties(this, depPath);\n                            for(const prop of props) {\n                              const propVal = prop ? prop.value : null;\n                              if (this.__evaluateVisibilityIf(this, prop, dependencyPath, propVal, item[depPath])) {\n                                  return true\n                              }\n                            }\n                          }\n                        }\n                        return false;\n                      };\n                      valueCheck = property.valueChanges.pipe(map(_chk));\n                    } else if (this.schema.visibleIf.allOf) {\n                      const _chk = (value) => {\n                        for (const item of this.schema.visibleIf.allOf) {\n                          for (const depPath of Object.keys(item)) {\n                            const props = this.findProperties(this, depPath);\n                            for(const prop of props) {\n                              const propVal = prop ? prop.value : null;\n                              if (!this.__evaluateVisibilityIf(this, prop, dependencyPath, propVal, item[depPath])) {\n                                return false;\n                              }\n                            }\n                          }\n                        }\n                        return true;\n                      };\n                      valueCheck = property.valueChanges.pipe(map(_chk));\n                    }\n                    const visibilityCheck = property._visibilityChanges;\n                    const and = combineLatest([valueCheck, visibilityCheck], (v1, v2) => v1 && v2);\n                    propertiesBinding.push(and);\n                  }\n                }\n              } else {\n                this.logger.warn('Can\\'t find property ' + dependencyPath + ' for visibility check of ' + this.path);\n                this.registerMissingVisibilityBinding(dependencyPath, this);\n                // not visible if not existent\n                this.setVisible(false);\n              }\n            }\n          }\n\n          combineLatest(propertiesBinding, (...values: boolean[]) => {\n            if (this.schema.visibleIf.allOf) {\n              return values.indexOf(false) === -1;\n            }\n            return values.indexOf(true) !== -1;\n          }).subscribe((visible) => {\n            this.setVisible(visible);\n          });\n        }\n      }\n      return true;\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  public _bindVisibility() {\n    if (this.__bindVisibility_oneOf_or_allOf())\n      return;\n    let visibleIf = this.schema.visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      let propertiesBinding = [];\n      for (let dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const properties = this.findProperties(this, dependencyPath);\n          if ((properties || []).length) {\n            for (const property of properties) {\n              if (property) {\n                const valueCheck = property.valueChanges.pipe(map(\n                  value => this.__evaluateVisibilityIf(this, property, dependencyPath, value, visibleIf[dependencyPath])\n                ));\n                const visibilityCheck = property._visibilityChanges;\n                const and = combineLatest([valueCheck, visibilityCheck], (v1, v2) => v1 && v2);\n                propertiesBinding.push(and);\n              }\n            }\n          } else {\n            this.logger.warn('Can\\'t find property ' + dependencyPath + ' for visibility check of ' + this.path);\n            this.registerMissingVisibilityBinding(dependencyPath, this);\n            // not visible if not existent\n            this.setVisible(false);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding, (...values: boolean[]) => {\n        return values.indexOf(true) !== -1;\n      }).pipe(distinctUntilChanged()).subscribe((visible) => {\n        this.setVisible(visible);\n      });\n    }\n  }\n\n  private registerMissingVisibilityBinding(dependencyPath: string, formProperty: FormProperty) {\n    formProperty._propertyBindingRegistry.getPropertyBindingsVisibility().add(dependencyPath, formProperty.path);\n  }\n\n\n  /**\n   * Finds all <code>formProperties</code> from a path with wildcards.<br/>\n   * e.g: <code>/garage/cars/&#42;/tires/&#42;/name</code><br/>\n   * @param target\n   * @param propertyPath\n   */\n  findProperties(target: FormProperty, propertyPath: string): FormProperty[] {\n    const props: FormProperty[] = [];\n    const paths = this.findPropertyPaths(target, propertyPath);\n    for (const path of paths) {\n      const p: FormProperty = target.searchProperty(path);\n      if (p) {\n        props.push(p);\n      }\n    }\n    return props;\n  }\n\n  /**\n   * Creates canonical paths from a path with wildcards.\n   * e.g:<br/>\n   * From:<br/>\n   * <code>/garage/cars/&#42;/tires/&#42;/name</code><br/>\n   * it creates:<br/>\n   * <code>/garage/cars/0/tires/0/name</code><br/>\n   * <code>/garage/cars/0/tires/1/name</code><br/>\n   * <code>/garage/cars/0/tires/2/name</code><br/>\n   * <code>/garage/cars/0/tires/3/name</code><br/>\n   * <code>/garage/cars/1/tires/0/name</code><br/>\n   * <code>/garage/cars/2/tires/1/name</code><br/>\n   * <code>/garage/cars/3/tires/2/name</code><br/>\n   * <code>/garage/cars/3/tires/3/name</code><br/>\n   * <code>/garage/cars/&#42;/tires/&#42;/name</code><br/>\n   * <code>/garage/cars/&#42;/tires/2/name</code><br/>\n   * <code>/garage/cars/&#42;/tires/3/name</code><br/>\n   * <br/>etc...\n   * @param target\n   * @param path\n   * @param parentPath\n   */\n  findPropertyPaths(target: FormProperty, path: string, parentPath?: string): string[] {\n    const ix = path.indexOf('*');\n    if (-1 !== ix) {\n      const prePath = ix > -1 ? path.substring(0, ix - 1) : path;\n      const subPath = ix > -1 ? path.substring(ix + 1) : path;\n      const prop: FormProperty = target.searchProperty(prePath);\n      let pathFound = [];\n      if (prop instanceof PropertyGroup) {\n        const arrProp = prop.properties as FormProperty[];\n        for (let i = 0; i < arrProp.length; i++) {\n          const curreItemPath = (parentPath || '') + prePath + (prePath.endsWith('/') ? '' : '/') + i + subPath;\n          const curreItemPrePath = (parentPath || '') + prePath + i;\n          if (-1 === curreItemPath.indexOf('*')) {\n            pathFound.push(curreItemPath);\n          }\n          const childrenPathFound = this.findPropertyPaths(arrProp[i], subPath, curreItemPrePath);\n          pathFound = pathFound.concat(childrenPathFound);\n        }\n      }\n      return pathFound;\n    }\n    return [path];\n  }\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n\n  _properties: FormProperty[] | { [key: string]: FormProperty } = null;\n\n  get properties() {\n    return this._properties;\n  }\n\n  set properties(properties: FormProperty[] | { [key: string]: FormProperty }) {\n    /**\n     * Override the setter to add an observer that notices when an item is added or removed.<br/>\n     */\n    this._properties = new Proxy(properties, this._propertyProxyHandler);\n  }\n  \n  private _propertyProxyHandler = new ExtendedProxyHandler(this.logger)\n\n  getProperty(path: string) {\n    let subPathIdx = path.indexOf('/');\n    let propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      let subPath = path.substr(subPathIdx + 1);\n      property = (<PropertyGroup>property).getProperty(subPath);\n    }\n    return property;\n  }\n\n  public forEachChild(fn: (formProperty: FormProperty, str: String) => void) {\n    for (let propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        let property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  public forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild((child) => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (<PropertyGroup>child).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  public _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive((property) => {\n      property._bindVisibility();\n    });\n  }\n\n  public isRoot() {\n    return this === this.root;\n  }\n}\n\n\nexport class ExtendedProxyHandler implements ProxyHandler<FormProperty[] | { [key: string]: FormProperty }> {\n  constructor(private logger: LogService) { }\n  /**\n   * When a new item is added it will be checked for visibility updates to proceed <br/>\n   * if any other field has a binding reference to it.<br/>\n   */\n  set(target: FormProperty[] | { [p: string]: FormProperty }, p: PropertyKey, value: any, receiver: any): boolean {\n\n    /**\n     * 1) Make sure a canonical path is set\n     */\n    const assertCanonicalPath = (propertyValue: any) => {\n      const formProperty = propertyValue as FormProperty;\n      if (Array.isArray(target) && propertyValue instanceof FormProperty) {\n        /**\n         * Create a canonical path replacing the last '*' with the elements position in array\n         * @param propertyPath\n         * @param indexOfChild\n         */\n        const getCanonicalPath = (propertyPath: string, indexOfChild: number) => {\n          let pos;\n          if (propertyPath && -1 !== (pos = propertyPath.lastIndexOf('*'))) {\n            return propertyPath.substring(0, pos) + indexOfChild.toString() + propertyPath.substring(pos + 1);\n          }\n        };\n        if (formProperty) {\n          formProperty._canonicalPath = getCanonicalPath(formProperty._canonicalPath, p as number);\n        }\n      }\n\n      const recalculateCanonicalPath = (formProperty: FormProperty) => {\n        if (!(formProperty instanceof PropertyGroup))\n          return\n        const propertyGroup = formProperty as PropertyGroup;\n        const propertyGroupChildren = (Array.isArray(propertyGroup.properties) ?\n          propertyGroup.properties :\n          Object.values(propertyGroup.properties || {})) as FormProperty[];\n        if (propertyGroupChildren.length || (formProperty.path || '').endsWith('/*')) {\n          /**\n           * If it is an array, then all children canonical paths must be computed now.\n           * The children don't have the parent's path segment set yet,\n           * because they are created before the parent gets attached to its parent.\n           */\n          for (const child of propertyGroupChildren) {\n            if (child.__canonicalPath.indexOf('*')) {\n              const p_path = formProperty._canonicalPath.split('/')\n              child._canonicalPath = p_path.concat(child._canonicalPath.split('/').splice(p_path.length)).join('/')\n            }\n            recalculateCanonicalPath(child)\n          }\n        }\n      }\n      recalculateCanonicalPath(formProperty)\n      const propertyGroup = formProperty as PropertyGroup;\n      const propertyGroupChildren = (Array.isArray(propertyGroup.properties) ?\n      propertyGroup.properties :\n      Object.values(propertyGroup.properties || {})) as FormProperty[];\n      return { property: formProperty, children: propertyGroupChildren };\n    };\n    const { property, children } = assertCanonicalPath(value);\n\n    /**\n     * 2) Add the new property before rebinding, so it can be found by <code>_bindVisibility</code>\n     */\n    const result = target[p as string] = value;\n\n    /**\n     * 3) Re-bind the visibility bindings referencing to this canonical paths\n     */\n    const rebindVisibility = () => {\n      const rebindAll = [property].concat(children);\n      const findPropertiesToRebind = (formProperty: FormProperty) => {\n        const propertyBindings = formProperty._propertyBindingRegistry.getPropertyBindingsVisibility();\n        let rebind: string[] = [];\n        if (formProperty._canonicalPath) {\n          rebind = rebind.concat(rebind.concat(propertyBindings.findByDependencyPath(formProperty._canonicalPath) || []));\n          if (formProperty._canonicalPath.startsWith('/')) {\n            rebind = rebind.concat(rebind.concat(propertyBindings.findByDependencyPath(formProperty._canonicalPath.substring(1)) || []));\n          }\n        }\n        rebind = rebind.concat(propertyBindings.findByDependencyPath(formProperty.path) || []);\n        if (formProperty.path.startsWith('/')) {\n          rebind = rebind.concat(rebind.concat(propertyBindings.findByDependencyPath(formProperty.path.substring(1)) || []));\n        }\n        const uniqueValues = {};\n        for (const item of rebind) {\n          uniqueValues[item] = item;\n        }\n        return Object.keys(uniqueValues);\n      };\n      for (const _property of rebindAll) {\n        if (_property instanceof FormProperty) {\n          try {\n            const rebindPaths = findPropertiesToRebind(_property);\n            for (const rebindPropPath of rebindPaths) {\n              const rebindProp = _property.searchProperty(rebindPropPath);\n              if (!rebindProp) {\n                this.logger.warn('Can\\'t find property to rebind visibility at path:', _property.path, 'property:', _property);\n              } else {\n                rebindProp._bindVisibility();\n              }\n            }\n          } catch (e) {\n            this.logger.error('Rebinding visibility error at path:', _property.path, 'property:', _property, e);\n          }\n        }\n      }\n    };\n    rebindVisibility();\n\n    return result;\n  }\n  get(target: FormProperty[] | { [p: string]: FormProperty }, p: PropertyKey, receiver: any): any {\n    return target[p as string];\n  }\n  deleteProperty(target: FormProperty[] | { [p: string]: FormProperty }, p: PropertyKey): boolean {\n    return delete target[p as string];\n  }\n}\n","import { FieldType } from '../template-schema/field/field';\n\nexport type TPropertyTypeMapping = { [type in FieldType]?: any };\n\nexport const PROPERTY_TYPE_MAPPING: TPropertyTypeMapping  = {};\n","import { Validator } from '../../model/validator';\nimport {ISchema} from '../../model/ISchema';\n\nexport enum FieldType {\n  String = 'string',\n  Object = 'object',\n  Array = 'array',\n  Boolean = 'boolean',\n  Integer =  'integer',\n  Number = 'number',\n}\n\nexport type TNullableFieldType = [FieldType.String | FieldType.Number | FieldType.Boolean | FieldType.Integer, 'null']\n  | ['null', FieldType.String | FieldType.Number | FieldType.Boolean | FieldType.Integer];\n\nexport interface Field {\n  name: string;\n  required: boolean;\n  getSchema(): ISchema;\n  getButtons(): any;\n  getValidators(): { path: string, validator: Validator }[];\n}\n\n\n","import { FormProperty, PropertyGroup } from './formproperty';\nimport { SchemaValidatorFactory } from '../schemavalidatorfactory';\nimport { ValidatorRegistry } from './validatorregistry';\nimport { PropertyBindingRegistry } from '../property-binding-registry';\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\nimport { ISchema, TSchemaPropertyType } from './ISchema';\nimport { LogService } from '../log.service';\nimport { TNullableFieldType, FieldType } from '../template-schema/field/field';\n\nexport class FormPropertyFactory {\n\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private validatorRegistry: ValidatorRegistry,\n              private propertyBindingRegistry: PropertyBindingRegistry,\n              private expressionCompilerFactory: ExpressionCompilerFactory,\n              private logger: LogService) {\n  }\n\n  createProperty(schema: ISchema, parent: PropertyGroup = null, propertyId?: string): FormProperty {\n    let newProperty = null;\n    let path = '';\n    let _canonicalPath = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += '/';\n        _canonicalPath += '/';\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n        _canonicalPath += propertyId;\n      } else if (parent.type === 'array') {\n        path += '*';\n        _canonicalPath += '*';\n      } else {\n        throw 'Instanciation of a FormProperty with an unknown parent type: ' + parent.type;\n      }\n      _canonicalPath = (parent._canonicalPath || parent.path) + _canonicalPath;\n    } else {\n      path = '/';\n      _canonicalPath = '/';\n    }\n\n    if (schema.$ref) {\n      const refSchema = this.schemaValidatorFactory.getSchema(parent.root.schema, schema.$ref);\n      newProperty = this.createProperty(refSchema, parent, path);\n    } else {\n      const type: FieldType = this.isUnionType(schema.type)\n        && this.isValidNullableUnionType(schema.type as TNullableFieldType)\n        && this.isAllowedToUsingNullableUnionTypeBySchemaContext(schema)\n          ? this.extractTypeFromNullableUnionType(schema.type as TNullableFieldType)\n          :  schema.type as FieldType;\n\n      if (PROPERTY_TYPE_MAPPING[type]) {\n        if (type === 'object' || type === 'array') {\n          newProperty = PROPERTY_TYPE_MAPPING[type](\n          this.schemaValidatorFactory, this.validatorRegistry, this.expressionCompilerFactory, schema, parent, path, this, this.logger);\n        } else {\n          newProperty = PROPERTY_TYPE_MAPPING[type](\n          this.schemaValidatorFactory, this.validatorRegistry, this.expressionCompilerFactory, schema, parent, path, this.logger);\n        }\n      } else {\n        throw new TypeError(`Undefined type ${type} (existing: ${Object.keys(PROPERTY_TYPE_MAPPING)})`);\n      }\n    }\n\n    newProperty._propertyBindingRegistry = this.propertyBindingRegistry;\n    newProperty._canonicalPath = _canonicalPath;\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    rootProperty.reset(null, true);\n    rootProperty._bindVisibility();\n  }\n\n  private isUnionType(unionType: TSchemaPropertyType): boolean {\n    return Array.isArray(unionType) && unionType.length > 1;\n  }\n\n  private isValidNullableUnionType(unionType: TNullableFieldType): boolean {\n    if (!unionType.some(subType => subType === 'null')) {\n      throw new TypeError(`Unsupported union type ${unionType}. Supports only nullable union types, for example [\"string\", \"null\"]`);\n    }\n\n    if (unionType.length !== 2) {\n      throw new TypeError(`Unsupported count of types in nullable union type ${unionType}. Supports only two types one of the which should be \"null\"`);\n    }\n\n    const type = this.extractTypeFromNullableUnionType(unionType);\n\n    if (!type || [FieldType.Object, FieldType.Array].includes(type)) {\n      throw new TypeError(`Unsupported second type ${type} for nullable union. Allowed types are \"${FieldType.Number}\", \"${FieldType.Integer}\", \"${FieldType.Boolean}\", \"${FieldType.String}\"`);\n    }\n\n    return true;\n  }\n\n  private extractTypeFromNullableUnionType(unionType: TNullableFieldType): FieldType | undefined {\n    return unionType.filter(type => type !== 'null')?.[0] as FieldType | undefined;\n  }\n\n  private isAllowedToUsingNullableUnionTypeBySchemaContext(schema: ISchema): boolean {\n    if (!schema.oneOf) {\n      throw new TypeError(`Unsupported using of nullable union type without \"oneOf\" attribute`);\n    }\n\n    return true;\n  }\n}\n","import {FormProperty} from './formproperty';\n\nexport abstract class AtomicProperty extends FormProperty {\n\n  setValue(value, onlySelf = false) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  reset(value: any = null, onlySelf = true) {\n    this.resetValue(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: any): any {\n    if (value === null) {\n      if (this.schema.default !== undefined) {\n        value = this.schema.default;\n      } else {\n        value = this.fallbackValue();\n      }\n    }\n    this._value = value;\n  }\n\n  public _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  abstract fallbackValue(): any;\n\n  public _updateValue() {\n  }\n}\n","import { PROPERTY_TYPE_MAPPING } from './typemapping';\nimport {PropertyGroup} from './formproperty';\nimport {FormPropertyFactory} from './formpropertyfactory';\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\nimport {ISchema} from './ISchema';\nimport { LogService } from '../log.service';\n\nexport class ObjectProperty extends PropertyGroup {\n\n  private propertiesId: string[] = [];\n\n  constructor(private formPropertyFactory: FormPropertyFactory,\n              schemaValidatorFactory: SchemaValidatorFactory,\n              validatorRegistry: ValidatorRegistry,\n              expressionCompilerFactory: ExpressionCompilerFactory,\n              schema: ISchema,\n              parent: PropertyGroup,\n              path: string,\n              logger: LogService) {\n    super(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\n    this.createProperties();\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId)) {\n        this.properties[propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  reset(value: any, onlySelf = true) {\n    value = value || this.schema.default || {};\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetProperties(value: any) {\n    for (const propertyId in this.schema.properties) {\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\n        this.properties[propertyId].reset(value[propertyId], true);\n      }\n    }\n  }\n\n  createProperties() {\n    this.properties = {};\n    this.propertiesId = [];\n    for (const propertyId in this.schema.properties) {\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\n        const propertySchema = this.schema.properties[propertyId];\n        this.properties[propertyId] = this.formPropertyFactory.createProperty(propertySchema, this, propertyId);\n        this.propertiesId.push(propertyId);\n      }\n    }\n  }\n\n  public _hasValue(): boolean {\n    return !!Object.keys(this.value).length;\n  }\n\n  public _updateValue() {\n    this.reduceValue();\n  }\n\n  public _runValidation() {\n    super._runValidation();\n\n    if (this._errors) {\n      this._errors.forEach(error => {\n        const prop = this.searchProperty(error.path.slice(1));\n        if (prop) {\n          prop.extendErrors(error);\n        }\n      });\n    }\n  }\n\n  private reduceValue(): void {\n    const value = {};\n    this.forEachChild((property, propertyId: string) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n\nPROPERTY_TYPE_MAPPING.object = (\n    schemaValidatorFactory: SchemaValidatorFactory,\n    validatorRegistry: ValidatorRegistry,\n    expressionCompilerFactory: ExpressionCompilerFactory,\n    schema: ISchema,\n    parent: PropertyGroup,\n    path: string,\n    formPropertyFactory: FormPropertyFactory,\n    logger: LogService\n) => {\n    return new ObjectProperty(\n        formPropertyFactory, schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\n};\n","import {FormProperty, PropertyGroup} from './formproperty';\nimport {FormPropertyFactory} from './formpropertyfactory';\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\nimport {ISchema} from './ISchema';\nimport { LogService } from '../log.service';\n\nexport class ArrayProperty extends PropertyGroup {\n\n  constructor(private formPropertyFactory: FormPropertyFactory,\n              schemaValidatorFactory: SchemaValidatorFactory,\n              validatorRegistry: ValidatorRegistry,\n              expressionCompilerFactory: ExpressionCompilerFactory,\n              schema: ISchema,\n              parent: PropertyGroup,\n              path: string,\n              logger: LogService) {\n    super(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\n  }\n\n  addItem(value: any = null): FormProperty {\n    let newProperty = this.addProperty();\n    newProperty.reset(value, false);\n    return newProperty;\n  }\n\n  private addProperty() {\n    let itemSchema = this.schema.items\n    if (Array.isArray(this.schema.items)) {\n      const itemSchemas = this.schema.items as object[]\n      if (itemSchemas.length > (<FormProperty[]>this.properties).length) {\n        itemSchema = itemSchema[(<FormProperty[]>this.properties).length]\n      } else if (this.schema.additionalItems) {\n        itemSchema = this.schema.additionalItems\n      } else {\n        // souldn't add new items since schema is undefined for the item at its position\n        return null\n      }\n    }\n    let newProperty = this.formPropertyFactory.createProperty(itemSchema, this);\n    (<FormProperty[]>this.properties).push(newProperty);\n    return newProperty;\n  }\n\n  removeItem(item: FormProperty) {\n    this.properties = (<FormProperty[]>this.properties).filter(i => i !== item);\n    this.updateValueAndValidity(false, true);\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    this.createProperties();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  public _hasValue(): boolean {\n    return true;\n  }\n\n  public _updateValue() {\n    this.reduceValue();\n  }\n\n  private reduceValue(): void {\n    const value = [];\n    this.forEachChild((property, _) => {\n      if (property.visible && property._hasValue()) {\n        value.push(property.value);\n      }\n    });\n    this._value = value;\n  }\n\n  reset(value: any, onlySelf = true) {\n    value = value || this.schema.default || [];\n    this.properties = [];\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  private createProperties() {\n    this.properties = [];\n  }\n\n\n  private resetProperties(value: any) {\n    for (let idx in value) {\n      if (value.hasOwnProperty(idx)) {\n        let property = this.addProperty();\n        property.reset(value[idx], true);\n      }\n    }\n  }\n}\n\nPROPERTY_TYPE_MAPPING.array = (\n    schemaValidatorFactory: SchemaValidatorFactory,\n    validatorRegistry: ValidatorRegistry,\n    expressionCompilerFactory: ExpressionCompilerFactory,\n    schema: ISchema,\n    parent: PropertyGroup,\n    path: string,\n    formPropertyFactory: FormPropertyFactory,\n    logger: LogService\n) => {\n    return new ArrayProperty(\n        formPropertyFactory, schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\n};\n","import { AtomicProperty } from './atomicproperty';\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\nimport { PropertyGroup } from './formproperty';\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\nimport { ValidatorRegistry } from './validatorregistry';\nimport { SchemaValidatorFactory } from '../schemavalidatorfactory';\nimport {ISchema} from './ISchema';\nimport { LogService } from '../log.service';\n\nexport class StringProperty extends AtomicProperty {\n\n  fallbackValue() {\n    return '';\n  }\n\n}\n\nPROPERTY_TYPE_MAPPING.string = (\n    schemaValidatorFactory: SchemaValidatorFactory,\n    validatorRegistry: ValidatorRegistry,\n    expressionCompilerFactory: ExpressionCompilerFactory,\n    schema: ISchema,\n    parent: PropertyGroup,\n    path: string,\n    logger: LogService\n) => {\n    return new StringProperty(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\n};\n","import { AtomicProperty } from './atomicproperty';\nimport { ValidatorRegistry, PropertyGroup } from '.';\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\nimport { SchemaValidatorFactory } from '../schemavalidatorfactory';\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\nimport {ISchema} from './ISchema';\nimport { LogService } from '../log.service';\n\nexport class BooleanProperty extends AtomicProperty {\n\n  fallbackValue() {\n    return null;\n  }\n}\n\nPROPERTY_TYPE_MAPPING.boolean = (\n    schemaValidatorFactory: SchemaValidatorFactory,\n    validatorRegistry: ValidatorRegistry,\n    expressionCompilerFactory: ExpressionCompilerFactory,\n    schema: ISchema,\n    parent: PropertyGroup,\n    path: string,\n    logger: LogService\n) => {\n    return new BooleanProperty(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\n};\n","import {AtomicProperty} from './atomicproperty';\nimport { ValidatorRegistry, PropertyGroup } from '.';\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\nimport { SchemaValidatorFactory } from '../schemavalidatorfactory';\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\nimport {ISchema} from './ISchema';\nimport { LogService } from '../log.service';\n\nexport class NumberProperty extends AtomicProperty {\n\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value, onlySelf = false) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = null;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n\nPROPERTY_TYPE_MAPPING.integer = (\n    schemaValidatorFactory: SchemaValidatorFactory,\n    validatorRegistry: ValidatorRegistry,\n    expressionCompilerFactory: ExpressionCompilerFactory,\n    schema: ISchema,\n    parent: PropertyGroup,\n    path: string,\n    logger: LogService\n) => {\n    return new NumberProperty(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\n};\n\n PROPERTY_TYPE_MAPPING.number = (\n    schemaValidatorFactory: SchemaValidatorFactory,\n    validatorRegistry: ValidatorRegistry,\n    expressionCompilerFactory: ExpressionCompilerFactory,\n    schema: ISchema,\n    parent: PropertyGroup,\n    path: string,\n    logger: LogService\n) => {\n    return new NumberProperty(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\n};\n","import { Validator } from './validator';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class ValidatorRegistry {\n  private validators: Validator[] = [];\n\n  register(path: string, validator: Validator) {\n    this.validators[path] = validator;\n  }\n\n  get(path: string): Validator {\n    return this.validators[path];\n  }\n\n  clear() {\n    this.validators = [];\n  }\n}\n","export function isPresent(o) {\n  return o !== null && o !== undefined;\n}\n\nexport function isBlank(o) {\n  return o === null || o === undefined;\n}\n","import {isBlank} from './utils';\nimport {Injectable} from '@angular/core';\nimport {ISchema} from './ISchema';\nimport {FieldType} from '../template-schema/field/field';\n\nfunction formatMessage(message, path) {\n  return `Parsing error on ${path}: ${message}`;\n}\n\nfunction schemaError(message, path): void {\n  let mesg = formatMessage(message, path);\n  throw new Error(mesg);\n}\n\nfunction schemaWarning(message, path): void {\n  let mesg = formatMessage(message, path);\n  throw new Error(mesg);\n}\n\n@Injectable()\nexport class SchemaPreprocessor {\n\n  static preprocess(jsonSchema: ISchema, path = '/'): any {\n    jsonSchema = jsonSchema || {};\n    SchemaPreprocessor.normalizeExtensions(jsonSchema);\n    if (jsonSchema.type === 'object') {\n      SchemaPreprocessor.checkProperties(jsonSchema, path);\n      SchemaPreprocessor.checkAndCreateFieldsets(jsonSchema, path);\n    } else if (jsonSchema.type === 'array') {\n      SchemaPreprocessor.checkItems(jsonSchema, path);\n    }\n    SchemaPreprocessor.normalizeWidget(jsonSchema);\n    SchemaPreprocessor.recursiveCheck(jsonSchema, path);\n  }\n\n  private static checkProperties(jsonSchema, path: string) {\n    if (isBlank(jsonSchema.properties)) {\n      jsonSchema.properties = {};\n      schemaWarning('Provided json schema does not contain a \\'properties\\' entry. Output schema will be empty', path);\n    }\n  }\n\n  private static checkAndCreateFieldsets(jsonSchema: any, path: string) {\n    if (jsonSchema.fieldsets === undefined) {\n      if (jsonSchema.order !== undefined) {\n        SchemaPreprocessor.replaceOrderByFieldsets(jsonSchema);\n      } else {\n        SchemaPreprocessor.createFieldsets(jsonSchema);\n      }\n    }\n    SchemaPreprocessor.checkFieldsUsage(jsonSchema, path);\n  }\n\n  private static checkFieldsUsage(jsonSchema: ISchema, path: string) {\n    let fieldsId: string[] = Object.keys(jsonSchema.properties);\n    let usedFields = {};\n    for (let fieldset of jsonSchema.fieldsets) {\n      for (let fieldId of fieldset.fields) {\n        if (usedFields[fieldId] === undefined) {\n          usedFields[fieldId] = [];\n        }\n        usedFields[fieldId].push(fieldset.id);\n      }\n    }\n\n    for (const fieldId of fieldsId) {\n      const isRequired = jsonSchema.required && jsonSchema.required.indexOf(fieldId) > -1;\n      if (isRequired && jsonSchema.properties[fieldId]) {\n        jsonSchema.properties[fieldId].isRequired = true;\n      }\n      if (usedFields.hasOwnProperty(fieldId)) {\n        if (usedFields[fieldId].length > 1) {\n          schemaError(`${fieldId} is referenced by more than one fieldset: ${usedFields[fieldId]}`, path);\n        }\n        delete usedFields[fieldId];\n      } else if (isRequired) {\n        schemaError(`${fieldId} is a required field but it is not referenced as part of a 'order' or a 'fieldset' property`, path);\n      } else {\n        delete jsonSchema[fieldId];\n        schemaWarning(`Removing unreferenced field ${fieldId}`, path);\n      }\n    }\n\n    for (let remainingfieldsId in usedFields) {\n      if (usedFields.hasOwnProperty(remainingfieldsId)) {\n        schemaWarning(`Referencing non-existent field ${remainingfieldsId} in one or more fieldsets`, path);\n      }\n    }\n  }\n\n  private static createFieldsets(jsonSchema: ISchema) {\n    jsonSchema.order = Object.keys(jsonSchema.properties);\n    SchemaPreprocessor.replaceOrderByFieldsets(jsonSchema);\n  }\n\n  private static replaceOrderByFieldsets(jsonSchema: ISchema) {\n    jsonSchema.fieldsets = [{\n      id: 'fieldset-default',\n      title: jsonSchema.title || '',\n      description: jsonSchema.description || '',\n      name: jsonSchema.name || '',\n      fields: jsonSchema.order\n    }];\n    delete jsonSchema.order;\n  }\n\n  private static normalizeWidget(fieldSchema: ISchema) {\n    let widget = fieldSchema.widget;\n    if (widget === undefined) {\n      widget = {'id': fieldSchema.type};\n    } else if (typeof widget === 'string') {\n      widget = {'id': widget};\n    }\n    fieldSchema.widget = widget;\n  }\n\n  private static checkItems(jsonSchema: ISchema, path) {\n    if (jsonSchema.items === undefined) {\n      schemaError('No \\'items\\' property in array', path);\n    }\n  }\n\n  private static recursiveCheck(jsonSchema: ISchema, path: string) {\n    if (jsonSchema.type === FieldType.Object) {\n      for (let fieldId in jsonSchema.properties) {\n        if (jsonSchema.properties.hasOwnProperty(fieldId)) {\n          let fieldSchema = jsonSchema.properties[fieldId];\n          SchemaPreprocessor.preprocess(fieldSchema, path + fieldId + '/');\n        }\n      }\n      if (jsonSchema.hasOwnProperty('definitions')) {\n        for (let fieldId in jsonSchema.definitions) {\n          if (jsonSchema.definitions.hasOwnProperty(fieldId)) {\n            let fieldSchema = jsonSchema.definitions[fieldId];\n            SchemaPreprocessor.removeRecursiveRefProperties(fieldSchema, `#/definitions/${fieldId}`);\n            SchemaPreprocessor.preprocess(fieldSchema, path + fieldId + '/');\n          }\n        }\n      }\n    } else if (jsonSchema.type === 'array') {\n      if (Array.isArray(jsonSchema.items || {})) {\n        for (let i = 0; i < jsonSchema.items.length; i++) {\n          SchemaPreprocessor.preprocess(jsonSchema.items[i], path + '*/');\n        }\n      } else {\n        SchemaPreprocessor.preprocess(jsonSchema.items, path + '*/');\n      }\n      if (jsonSchema.additionalItems) {\n        SchemaPreprocessor.preprocess(jsonSchema.additionalItems, path + '*/');\n      }\n    }\n  }\n\n  private static removeRecursiveRefProperties(jsonSchema: ISchema, definitionPath) {\n    // to avoid infinite loop\n    if (jsonSchema.type === FieldType.Object) {\n      for (let fieldId in jsonSchema.properties) {\n        if (jsonSchema.properties.hasOwnProperty(fieldId)) {\n          if (jsonSchema.properties[fieldId].$ref\n            && jsonSchema.properties[fieldId].$ref === definitionPath) {\n            delete jsonSchema.properties[fieldId];\n          } else if (jsonSchema.properties[fieldId].type === 'object') {\n            SchemaPreprocessor.removeRecursiveRefProperties(jsonSchema.properties[fieldId], definitionPath);\n          }\n        }\n      }\n    }\n  }\n  \n  /**\n   * Enables alias names for JSON schema extensions.\n   *\n   * Copies the value of each alias JSON schema property\n   * to the JSON schema property of ngx-schema-form.\n   *\n   * @param schema JSON schema to enable alias names.\n   */\n  private static normalizeExtensions(schema: ISchema): void {\n    const extensions = [\n        { name: \"fieldsets\", regex: /^x-?field-?sets$/i },\n        { name: \"widget\",    regex: /^x-?widget$/i },\n        { name: \"visibleIf\", regex: /^x-?visible-?if$/i }\n    ];\n    const keys = Object.keys(schema);\n    for (let i = 0; i < keys.length; ++i) {\n      let k = keys[i];\n      let e = extensions.find(e => !!k.match(e.regex));\n      if (e) {\n        let v = schema[k];\n        let copy = JSON.parse(JSON.stringify(v));\n        schema[e.name] = copy;\n      }\n    }\n  }\n}\n\n","import ZSchema from 'z-schema';\nimport {Injectable} from '@angular/core';\nimport {ISchema} from './model/ISchema';\nimport {FieldType} from './template-schema/field/field';\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema): (value: any) => any;\n\n  abstract getSchema(schema, ref): any;\n\n  /**\n   * Override this method to reset the schema validator instance.<br/>\n   * This may be required since some schema validators keep a deep copy<br/>\n   * of your schemas and changes at runtime are not recognized by the schema validator.<br/>\n   * In this method you should either re-instantiate the schema validator or\n   * clear its cache.<br/>\n   * Example of re-instantiating schema validator\n   * <code>\n   *     reset(){\n   *         this.zschema = new ZSchema({})\n   *     }\n   * </code>\n   * <br/>\n   * Since this method it self does nothing there is <br/>\n   * no need to call the <code>super.reset()</code>\n   */\n  reset() {\n\n  }\n}\n\n@Injectable()\nexport class ZSchemaValidatorFactory extends SchemaValidatorFactory {\n\n  protected zschema;\n\n  constructor() {\n    super();\n    this.createSchemaValidator();\n  }\n\n  private createSchemaValidator() {\n    this.zschema =  new ZSchema({\n      breakOnFirstError: false\n    });\n  }\n\n  reset() {\n    this.createSchemaValidator();\n  }\n\n  createValidatorFn(schema: ISchema) {\n    return (value): { [key: string]: boolean } => {\n\n      if (schema.type === FieldType.Number || schema.type === FieldType.Integer) {\n        value = +value;\n      }\n\n      this.zschema.validate(value, schema);\n      // tslint:disable-next-line:prefer-const\n      let err = this.zschema.getLastErrors();\n\n      this.denormalizeRequiredPropertyPaths(err);\n\n      return err || null;\n    };\n  }\n\n  getSchema(schema: any, ref: string) {\n    // check definitions are valid\n    const isValid = this.zschema.compileSchema(schema);\n    if (isValid) {\n      return this.getDefinition(schema, ref);\n    } else {\n      throw this.zschema.getLastError();\n    }\n  }\n\n  private denormalizeRequiredPropertyPaths(err: any[]) {\n    if (err && err.length) {\n      err = err.map(error => {\n        if (error.path === '#/' && error.code === 'OBJECT_MISSING_REQUIRED_PROPERTY') {\n          error.path = `${error.path}${error.params[0]}`;\n        }\n        return error;\n      });\n    }\n  }\n\n  private getDefinition(schema: any, ref: string) {\n    let foundSchema = schema;\n    ref.split('/').slice(1).forEach(ptr => {\n      if (ptr) {\n        foundSchema = foundSchema[ptr];\n      }\n    });\n    return foundSchema;\n  }\n}\n\n","export class WidgetRegistry {\n\n  private widgets: { [type: string]: any } = {};\n\n  private defaultWidget: any;\n\n  constructor() { }\n\n  setDefaultWidget(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  getDefaultWidget() {\n    return this.defaultWidget;\n  }\n\n  hasWidget(type: string) {\n    return this.widgets.hasOwnProperty(type);\n  }\n\n  register(type: string, widget: any) {\n    this.widgets[type] = widget;\n  }\n\n  getWidgetType(type: string): any {\n    if (this.hasWidget(type)) {\n      return this.widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n","import {\n  ViewContainerRef,\n  ComponentRef,\n  ComponentFactoryResolver,\n  Injectable\n} from '@angular/core';\n\nimport { WidgetRegistry } from './widgetregistry';\n\n@Injectable()\nexport class WidgetFactory {\n\n  private resolver: ComponentFactoryResolver;\n  private registry: WidgetRegistry;\n\n  constructor(registry: WidgetRegistry, resolver: ComponentFactoryResolver) {\n    this.registry = registry;\n    this.resolver = resolver;\n  }\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<any> {\n    let componentClass = this.registry.getWidgetType(type);\n\n    let componentFactory = this.resolver.resolveComponentFactory(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TerminatorService {\n  public onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n/**\n * General purpose propery binding registry\n */\n@Injectable()\nexport class PropertyBindingRegistry {\n\n  private bindings: { [key: string]: PropertyBindings } = {};\n\n  getPropertyBindings(type: PropertyBindingTypes): PropertyBindings {\n    this.bindings[type] = this.bindings[type] || new PropertyBindings();\n    return this.bindings[type];\n  }\n\n  getPropertyBindingsVisibility() {\n    return this.getPropertyBindings(PropertyBindingTypes.visibility);\n  }\n}\n\n/**\n * Defines the types of supported property bindings.<br/>\n * For now only <code>visibility</code> is supported.<br/>\n */\nexport enum PropertyBindingTypes {\n  visibility\n}\n\n/**\n * Storage that holds all bindings that are property paths related.<br/>\n */\nexport class PropertyBindings {\n  sourcesIndex: SimplePropertyIndexer = new SimplePropertyIndexer();\n  dependenciesIndex: SimplePropertyIndexer = new SimplePropertyIndexer();\n\n  add(dependencyPath: string, sourcePropertyPath: string) {\n    this.sourcesIndex.store(sourcePropertyPath, dependencyPath);\n    this.dependenciesIndex.store(dependencyPath, sourcePropertyPath);\n  }\n\n  findByDependencyPath(dependencyPath: string): string[] {\n    const result = this.dependenciesIndex.find(dependencyPath);\n    result.results = result.results || [];\n    let values = [];\n    for (const res of result.results) {\n      values = values.concat(Object.keys(res.value));\n    }\n    return result.found ? values : [];\n  }\n\n  getBySourcePropertyPath(sourcePropertyPath: string): string[] {\n    const result = this.sourcesIndex.find(sourcePropertyPath);\n    result.results = result.results || [];\n    let values = [];\n    for (const res of result.results) {\n      values = values.concat(Object.keys(res.value));\n    }\n    return result.found ? values : [];\n  }\n\n  createPathIndex(path: string): string[] {\n    return path.split('/');\n  }\n}\n\n/**\n * Simple indexer to store property paths\n */\nexport class SimplePropertyIndexer {\n\n  static MARKER = '$____value';\n  index: object = {};\n  findOnlyWithValue = true;\n\n  private _createPathIndex(path: string) {\n    return path\n      .replace(new RegExp('//', 'g'), '/')\n      .replace(new RegExp('^/', 'g'), '')\n      .split('/').filter(item => item);\n  }\n\n  store(propertyPath: string, value?: any) {\n    this._storeIndex(this._createPathIndex(propertyPath), value);\n  }\n\n  private _storeIndex(pathIndex: string[], value?: string) {\n    let indexPos = this.index;\n    for (const key of pathIndex) {\n      indexPos[key] = indexPos[key] || {};\n      indexPos = indexPos[key];\n    }\n    if (indexPos && value) {\n      indexPos[SimplePropertyIndexer.MARKER] = indexPos[SimplePropertyIndexer.MARKER] || {};\n      indexPos[SimplePropertyIndexer.MARKER][value] = value;\n    }\n  }\n\n  /**\n   * Find path in index.<br/>\n   * Will find path like:<br/>\n   * <ul>\n   *     <li>/property/0/prop</li>\n   *     <li>/property/0/prop/2/test</li>\n   *     <li>/property/0/prop/&#42;/test</li>\n   *     <li>/property/&#42;/prop/1/test</li>\n   *     <li>/property/&#42;/prop/&#42;/test</li>\n   *     <li>/property/1/prop/&#42;/test</li>\n   *  </ul>\n   * @param path\n   */\n  find(path: string): IndexerResult {\n    return this._findInIndex(this._createPathIndex(path));\n  }\n\n  _findInIndex(path: string[]): IndexerResult {\n    const ixRes: IndexerResult = {target: path, found: false, results: []};\n    this.__findIndex(ixRes, path, this.index, []);\n    return ixRes;\n  }\n\n  __findIndex(indexerResults: IndexerResult, path: string[], index: object, parent?: string[]) {\n\n    const p = parent || [];\n    const segment = path[0];\n    const wild = ('*' === segment) ? Object.keys(index) : [];\n    const _keys = ((Array.isArray(segment) ? segment : [segment]) as string[]).concat(wild);\n    const keys = _keys.filter((item, pos) => '*' !== item && _keys.indexOf(item) === pos); // remove duplicates\n\n    if (index['*']) {\n      keys.push('*');\n    }\n\n    let paths = [];\n    for (const key of keys) {\n      const restPath = path.slice(1);\n      const restIndex = index[key];\n      const restParent = p.concat(key);\n\n      if (path.length === 1) {// collect only the full paths\n        if (!this.findOnlyWithValue || (restIndex && restIndex[SimplePropertyIndexer.MARKER])) {\n          indexerResults.results = indexerResults.results || [];\n          indexerResults.results.push({\n            path: restParent,\n            value: restIndex[SimplePropertyIndexer.MARKER]\n          });\n          paths.push(restParent);\n          indexerResults.found = indexerResults.results.length > 0;\n        }\n      }\n\n      if (!restPath || !restPath.length || !restIndex) {\n        break;\n      }\n      const restPaths = this.__findIndex(indexerResults, restPath, restIndex, restParent);\n\n      paths = paths.concat(restPaths);\n    }\n    return paths;\n  }\n\n}\n\nexport interface IndexerResult {\n  /**\n   * The path originally searched for\n   */\n  target: string[];\n  /**\n   * Flag for the status of found or not found.<br/>\n   * Usually <code>results</code> will be empty if no matches found.\n   */\n  found: boolean;\n  /**\n   * The result path and values from the index search.<br/>\n   * Usually <code>results</code> will be empty if no matches found.\n   */\n  results: {\n    /**\n     * The path that matched the <code>target</code>\n     * separated in segments\n     */\n    path: string[],\n    /**\n     * The value stored at the <code>path</code>\n     */\n    value: any\n  }[];\n}\n","export abstract class ExpressionCompilerFactory {\n    public abstract createExpressionCompiler(): ExpressionCompiler;\n    public abstract createExpressionCompilerVisibilityIf(): ExpressionCompilerVisibilityIf;\n}\n\nexport interface ExpressionCompiler {\n    evaluate(expression: string, context: object): any;\n}\n\nexport interface ExpressionCompilerVisibilityIf {\n    evaluate(expression: string, context: ExpressionContextVisibilitIf): any;\n}\n/**\n * UseCase:<br/>\n * When evaluating the expression of a <code>visibilityIf</code> condition\n * an instance of this definition will be passed as context.<br/>\n * This will give access to the source and target <code>FormProperty</code>.\n */\nexport interface ExpressionContextVisibilitIf {\n    /**\n     * The source property which has the <code>visibilityIf</code> defined\n     */\n    source: FormProperty\n    /**\n     * The target property given with the <code>visibilityIf</code>\n     * <em>path</em> property\n     */\n    target: FormProperty\n}\n\n\nimport * as JEXL from 'jexl';\nimport { FormProperty } from './model';\n\nexport class JEXLExpressionCompilerFactory extends ExpressionCompilerFactory {\n    public createExpressionCompiler(): ExpressionCompiler {\n        return new JEXLExpressionCompiler();\n    }\n\n    public createExpressionCompilerVisibilityIf(): ExpressionCompilerVisibilityIf {\n        return new JEXLExpressionCompilerVisibiltyIf();\n    }\n}\n\nexport class JEXLExpressionCompiler implements ExpressionCompiler {\n    evaluate(expression: string, context: object = {}): any {\n        return new JEXL.Jexl().evalSync(expression, context)\n    }\n}\n\nexport class JEXLExpressionCompilerVisibiltyIf implements ExpressionCompilerVisibilityIf {\n    evaluate(expression: string, context: ExpressionContextVisibilitIf = { source: {} as FormProperty, target: {} as FormProperty }): any {\n        return new JEXL.Jexl().evalSync(expression, context)\n    }\n}\n","import { InjectionToken, Inject, Injectable, Optional } from \"@angular/core\";\n\nexport const LOG_LEVEL = new InjectionToken<LogLevel>('Logging level');\n\n/**\n * Represents the different logging levels of the `console` output.\n */\nexport const enum LogLevel {\n    log,\n    warn,\n    error,\n    off,\n    all\n}\n\nexport abstract class LogService {\n    public logLevel = LogLevel.off;\n    constructor(@Optional() @Inject(LOG_LEVEL) public level: any /* should be of type `LogLevel` but AOT fails with : 'Error encountered in metadata generated for exported symbol 'DefaultLogService':\"Could not resolve type LogLevel.\" */) {\n        this.logLevel = level as LogLevel\n    }\n    /**\n     * Equals `console.warn`\n     * @param message \n     * @param optionalParams \n     */\n    public abstract warn(message?: any, ...optionalParams: any[]): void\n    /**\n     * Equals `console.error`\n     * @param message \n     * @param optionalParams \n     */\n    public abstract error(message?: any, ...optionalParams: any[]): void\n    /**\n     * Equals `console.log`\n     * @param message \n     * @param optionalParams \n     */\n    public abstract log(message?: any, ...optionalParams: any[]): void\n\n    isWarnEnabled() {\n        return LogLevel.all === this.logLevel || LogLevel.warn === this.logLevel\n    }\n\n    isErrorEnabled() {\n        return LogLevel.all === this.logLevel || LogLevel.error === this.logLevel\n    }\n\n    isLogEnabled() {\n        return LogLevel.all === this.logLevel || LogLevel.log === this.logLevel\n    }\n}\n\n/**\n * Very simple abstraction of logging\n */\n@Injectable()\nexport class DefaultLogService extends LogService {\n\n    constructor(@Optional() @Inject(LOG_LEVEL) public logLevel: any /* should be of type `LogLevel` but AOT fails with : 'Error encountered in metadata generated for exported symbol 'DefaultLogService':\"Could not resolve type LogLevel.\" */) {\n        super(logLevel)\n        this.logLevel = logLevel as LogLevel\n    }\n    warn = (!this.isWarnEnabled() ? () => { } : console.warn)\n    error = (!this.isErrorEnabled() ? () => { } : console.error)\n    log = (!this.isLogEnabled() ? () => { } : console.log)\n}","import {\n  ChangeDetectorRef,\n  Component,\n  OnChanges,\n  EventEmitter,\n  Input,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport {Action} from './model';\nimport {ActionRegistry} from './model';\nimport {FormProperty} from './model';\nimport {FormPropertyFactory} from './model';\nimport {SchemaPreprocessor} from './model';\nimport {ValidatorRegistry} from './model';\nimport {Validator} from './model';\nimport {Binding} from './model';\nimport {BindingRegistry} from './model';\n\nimport {SchemaValidatorFactory} from './schemavalidatorfactory';\nimport {WidgetFactory} from './widgetfactory';\nimport {TerminatorService} from './terminator.service';\nimport {PropertyBindingRegistry} from './property-binding-registry';\nimport { ExpressionCompilerFactory } from './expression-compiler-factory';\nimport {ISchema} from './model';\nimport { LogService } from './log.service';\n\nexport function useFactory(schemaValidatorFactory, validatorRegistry, propertyBindingRegistry, expressionCompilerFactory, logService) {\n  return new FormPropertyFactory(schemaValidatorFactory, validatorRegistry, propertyBindingRegistry, expressionCompilerFactory, logService);\n}\n\n@Component({\n  selector: 'sf-form',\n  template: `\n    <form *ngIf=\"rootProperty\" [attr.name]=\"rootProperty.rootName\" [attr.id]=\"rootProperty.rootName\">\n      <sf-form-element [formProperty]=\"rootProperty\"></sf-form-element>\n    </form>`,\n  providers: [\n    ActionRegistry,\n    ValidatorRegistry,\n    PropertyBindingRegistry,\n    BindingRegistry,\n    SchemaPreprocessor,\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory: useFactory,\n      deps: [SchemaValidatorFactory, ValidatorRegistry, PropertyBindingRegistry, ExpressionCompilerFactory, LogService]\n    },\n    TerminatorService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FormComponent,\n      multi: true\n    }\n  ]\n})\nexport class FormComponent implements OnChanges, ControlValueAccessor {\n\n  @Input() schema: ISchema | null = null;\n\n  @Input() model: any;\n\n  @Input() actions: { [actionId: string]: Action } = {};\n\n  @Input() validators: { [path: string]: Validator } = {};\n\n  @Input() bindings: { [path: string]: Binding } = {};\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onChange = new EventEmitter<{ value: any }>();\n\n  @Output() modelChange = new EventEmitter<any>();\n\n  @Output() isValid = new EventEmitter<boolean>();\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onErrorChange = new EventEmitter<{ value: any[] }>();\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onErrorsChange = new EventEmitter<{value: any}>();\n\n  rootProperty: FormProperty = null;\n\n  private onChangeCallback: any;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private actionRegistry: ActionRegistry,\n    private validatorRegistry: ValidatorRegistry,\n    private bindingRegistry: BindingRegistry,\n    private cdr: ChangeDetectorRef,\n    private terminator: TerminatorService\n  ) { }\n\n  writeValue(obj: any) {\n    if (this.rootProperty) {\n      this.rootProperty.reset(obj, false);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n    if (this.rootProperty) {\n      this.rootProperty.valueChanges.subscribe(\n        this.onValueChanges.bind(this)\n      );\n    }\n  }\n\n  // TODO implement\n  registerOnTouched(fn: any) {\n  }\n\n  // TODO implement\n  // setDisabledState(isDisabled: boolean)?: void\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.validators) {\n      this.setValidators();\n    }\n\n    if (changes.actions) {\n      this.setActions();\n    }\n\n    if (changes.bindings) {\n      this.setBindings();\n    }\n\n    if (this.schema && !this.schema.type) {\n      this.schema.type = 'object';\n    }\n\n    if (this.schema && changes.schema) {\n      if (!changes.schema.firstChange) {\n        this.terminator.destroy();\n      }\n\n      SchemaPreprocessor.preprocess(this.schema);\n      this.rootProperty = this.formPropertyFactory.createProperty(this.schema);\n      if (this.model) {\n        // FIX: Root property is freshly created. Update it with the model.\n        this.rootProperty.reset(this.model, false);\n      }\n\n      this.rootProperty.valueChanges.subscribe(\n        this.onValueChanges.bind(this)\n      );\n\n      this.rootProperty.errorsChanges.subscribe(value => {\n        this.onErrorChange.emit({value: value});\n        this.isValid.emit(!(value && value.length));\n      });\n\n    } else if (this.schema && changes.model) {\n      // FIX: Only model is changed. Keep the same subscribers of root property.\n      this.rootProperty.reset(this.model, false);\n    }\n    this.cdr.detectChanges();\n\n  }\n\n  private setValidators() {\n    this.validatorRegistry.clear();\n    if (this.validators) {\n      for (const validatorId in this.validators) {\n        if (this.validators.hasOwnProperty(validatorId)) {\n          this.validatorRegistry.register(validatorId, this.validators[validatorId]);\n        }\n      }\n    }\n  }\n\n  private setActions() {\n    this.actionRegistry.clear();\n    if (this.actions) {\n      for (const actionId in this.actions) {\n        if (this.actions.hasOwnProperty(actionId)) {\n          this.actionRegistry.register(actionId, this.actions[actionId]);\n        }\n      }\n    }\n  }\n\n  private setBindings() {\n    this.bindingRegistry.clear();\n    if (this.bindings) {\n      for (const bindingPath in this.bindings) {\n        if (this.bindings.hasOwnProperty(bindingPath)) {\n          this.bindingRegistry.register(bindingPath, this.bindings[bindingPath]);\n        }\n      }\n    }\n  }\n\n  public reset() {\n    this.rootProperty.reset(null, true);\n  }\n\n  private setModel(value: any) {\n    if (this.model) {\n      // FIX: Value is already updated with model. Keep model in sync with value,\n      // but don't change the model reference.\n      for (const prop of Object.getOwnPropertyNames(this.model)) {\n        delete this.model[prop];\n      }\n      Object.assign(this.model, value);\n    } else {\n      this.model = value;\n    }\n  }\n\n  private onValueChanges(value) {\n    if (this.onChangeCallback) {\n      this.setModel(value);\n      this.onChangeCallback(value);\n    }\n\n    // two way binding is used\n    if (this.modelChange.observers.length > 0) {\n      if (!this.onChangeCallback) {\n        this.setModel(value);\n      }\n      this.modelChange.emit(this.model); // FIX: Emit model change event\n    }\n    this.onChange.emit({value: value});\n  }\n}\n","import {\n  Component, ElementRef,\n  Input, OnDestroy,\n  OnInit, Renderer2\n} from '@angular/core';\n\nimport {\n  FormControl\n} from '@angular/forms';\n\nimport {Widget} from './widget';\n\nimport {ActionRegistry} from './model/actionregistry';\nimport {FormProperty} from './model/formproperty';\nimport {BindingRegistry} from './model/bindingregistry';\nimport {Binding} from './model/binding';\nimport { LogService } from './log.service';\n\n@Component({\n  selector: 'sf-form-element',\n  template: `\n    <div *ngIf=\"formProperty.visible\"\n         [class.has-error]=\"!control.valid\"\n         [class.has-success]=\"control.valid\">\n      <sf-widget-chooser\n        (widgetInstanciated)=\"onWidgetInstanciated($event)\"\n        [widgetInfo]=\"formProperty.schema.widget\">\n      </sf-widget-chooser>\n      <sf-form-element-action *ngFor=\"let button of buttons\" [button]=\"button\" [formProperty]=\"formProperty\"></sf-form-element-action>\n    </div>`\n})\nexport class FormElementComponent implements OnInit, OnDestroy {\n\n  private static counter = 0;\n\n  @Input() formProperty: FormProperty;\n  control: FormControl = new FormControl('', () => null);\n\n  widget: Widget<any> = null;\n\n  buttons = [];\n\n  unlisten = [];\n\n  constructor(private actionRegistry: ActionRegistry,\n              private bindingRegistry: BindingRegistry,\n              private renderer: Renderer2,\n              private elementRef: ElementRef,\n              private logger: LogService) {\n  }\n\n  ngOnInit() {\n    this.parseButtons();\n    this.setupBindings();\n  }\n\n  private setupBindings() {\n    const bindings: Binding[] = this.bindingRegistry.get(this.formProperty.path);\n    if ((bindings || []).length) {\n      bindings.forEach((binding) => {\n        for (const eventId in binding) {\n          this.createBinding(eventId, binding[eventId]);\n        }\n      });\n    }\n  }\n\n  private createBinding(eventId, listeners) {\n    this.unlisten.push(this.renderer.listen(this.elementRef.nativeElement,\n      eventId,\n      (event) => {\n        const _listeners = Array.isArray(listeners) ? listeners : [listeners]\n        for (const _listener of _listeners) {\n          if (_listener instanceof Function) {\n            try { _listener(event, this.formProperty); } catch (e) { this.logger.error(`Error calling bindings event listener for '${eventId}'`, e) }\n          } else {\n            this.logger.warn('Calling non function handler for eventId ' + eventId + ' for path ' + this.formProperty.path);\n          }\n        }\n      }));\n  }\n\n  private parseButtons() {\n    if (this.formProperty.schema.buttons !== undefined) {\n      this.buttons = this.formProperty.schema.buttons;\n\n      for (let button of this.buttons) {\n        this.createButtonCallback(button);\n      }\n    }\n  }\n\n  private createButtonCallback(button) {\n    button.action = (e) => {\n      let action;\n      if (button.id && (action = this.actionRegistry.get(button.id))) {\n        if (action) {\n          action(this.formProperty, button.parameters);\n        }\n      }\n      e.preventDefault();\n    };\n  }\n\n  onWidgetInstanciated(widget: Widget<any>) {\n    this.widget = widget;\n    let id = this.formProperty.canonicalPathNotation || 'field' + (FormElementComponent.counter++);\n    if (this.formProperty.root.rootName) {\n      id = `${this.formProperty.root.rootName}:${id}`;\n    }\n\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.name = id;\n    this.widget.id = id;\n    this.widget.control = this.control;\n  }\n\n  ngOnDestroy(): void {\n    if (this.unlisten) {\n      this.unlisten.forEach((item) => {\n        item();\n      });\n    }\n  }\n\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  ViewChild,\n  ViewContainerRef,\n  OnInit,\n  OnDestroy\n} from \"@angular/core\";\nimport {Subscription} from 'rxjs';\nimport {WidgetFactory} from \"./widgetfactory\";\nimport {TerminatorService} from \"./terminator.service\";\n\n@Component({\n  selector: 'sf-form-element-action',\n  template: '<ng-template #target></ng-template>'\n})\nexport class FormElementComponentAction implements OnInit, OnChanges, OnDestroy {\n\n  @Input()\n  button: any;\n\n  @Input()\n  formProperty: any;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true }) container: ViewContainerRef;\n\n  private ref: ComponentRef<any>;\n  private subs: Subscription;\n\n  constructor(private widgetFactory: WidgetFactory = null,\n              private terminator: TerminatorService) {\n  }\n\n  ngOnInit() {\n    this.subs = this.terminator.onDestroy.subscribe(destroy => {\n      if (destroy) {\n        this.ref.destroy();\n      }\n    });\n  }\n\n  ngOnChanges() {\n    this.ref = this.widgetFactory.createWidget(this.container, this.button.widget || 'button');\n    this.ref.instance.button = this.button;\n    this.ref.instance.formProperty = this.formProperty;\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  ChangeDetectorRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { TerminatorService } from './terminator.service';\nimport { WidgetFactory } from './widgetfactory';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'sf-widget-chooser',\n  template: `<div #target></div>`,\n})\nexport class WidgetChooserComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Input() widgetInfo: any;\n\n  @Output() widgetInstanciated = new EventEmitter<any>();\n\n  @ViewChild('target', { read: ViewContainerRef, static: true }) container: ViewContainerRef;\n\n  private widgetInstance: any;\n  private ref: ComponentRef<any>;\n  private subs: Subscription;\n\n  constructor(\n    private widgetFactory: WidgetFactory = null,\n    private cdr: ChangeDetectorRef,\n    private terminator: TerminatorService,\n  ) { }\n\n  ngOnInit() {\n    this.subs = this.terminator.onDestroy.subscribe(destroy => {\n      if (destroy) {\n        this.ref.destroy();\n      }\n    });\n  }\n\n  ngOnChanges() {\n    this.ref = this.widgetFactory.createWidget(this.container, this.widgetInfo.id);\n    this.widgetInstanciated.emit(this.ref.instance);\n    this.widgetInstance = this.ref.instance;\n    this.cdr.detectChanges();\n  }\n\n  ngOnDestroy() {\n    if (this.subs) { // FIX: Guard against null, something happening in the tests.\n      this.subs.unsubscribe();\n    }\n  }\n}\n","import { AfterViewInit, Directive } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { ArrayProperty } from \"./model/arrayproperty\";\nimport { FormProperty } from \"./model/formproperty\";\nimport { ObjectProperty } from \"./model/objectproperty\";\nimport { ISchema } from \"./model/ISchema\";\n\nexport abstract class Widget<T extends FormProperty> {\n  formProperty: T;\n  control: FormControl;\n  errorMessages: string[];\n\n  id: string = \"\";\n  name: string = \"\";\n  schema: ISchema = {};\n}\n\n@Directive()\nexport class ControlWidget\n  extends Widget<FormProperty>\n  implements AfterViewInit {\n  ngAfterViewInit() {\n    const control = this.control;\n    this.formProperty.valueChanges.subscribe((newValue) => {\n      if (control.value !== newValue) {\n        control.setValue(newValue, { emitEvent: false });\n      }\n    });\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, { emitEvent: true });\n      const messages = (errors || [])\n        .filter((e) => {\n          return e.path && e.path.slice(1) === this.formProperty.path;\n        })\n        .map((e) => e.message);\n      this.errorMessages = messages.filter((m, i) => messages.indexOf(m) === i);\n    });\n    control.valueChanges.subscribe((newValue) => {\n      this.formProperty.setValue(newValue, false);\n    });\n  }\n}\n\n@Directive()\nexport class ArrayLayoutWidget\n  extends Widget<ArrayProperty>\n  implements AfterViewInit {\n  ngAfterViewInit() {\n    const control = this.control;\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, { emitEvent: true });\n    });\n  }\n}\n\n@Directive()\nexport class ObjectLayoutWidget\n  extends Widget<ObjectProperty>\n  implements AfterViewInit {\n  ngAfterViewInit() {\n    const control = this.control;\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, { emitEvent: true });\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { ArrayLayoutWidget } from '../../widget';\nimport { FormProperty } from '../../model';\n\n@Component({\n  selector: 'sf-array-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n\t<span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<div *ngFor=\"let itemProperty of formProperty.properties\">\n\t\t<sf-form-element [formProperty]=\"itemProperty\"></sf-form-element>\n\t\t<button (click)=\"removeItem(itemProperty)\" class=\"btn btn-default array-remove-button\"\n\t\t\t[disabled]=\"isRemoveButtonDisabled()\" \n\t\t\t*ngIf=\"!(schema.hasOwnProperty('minItems') && schema.hasOwnProperty('maxItems') && schema.minItems === schema.maxItems)\"\n\t\t\t>\n\t\t\t<span class=\"glyphicon glyphicon-minus\" aria-hidden=\"true\"></span> Remove\n\t\t</button>\n\t</div>\n\t<button (click)=\"addItem()\" class=\"btn btn-default array-add-button\"\n\t\t[disabled]=\"isAddButtonDisabled()\"\n\t\t*ngIf=\"!(schema.hasOwnProperty('minItems') && schema.hasOwnProperty('maxItems') && schema.minItems === schema.maxItems)\"\n\t>\n\t\t<span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> Add\n\t</button>\n</div>`\n})\nexport class ArrayWidget extends ArrayLayoutWidget {\n  buttonDisabledAdd:boolean\n  buttonDisabledRemove:boolean\n\n  addItem() {\n\tthis.formProperty.addItem();\n\tthis.updateButtonDisabledState()\n  }\n\n  removeItem(item: FormProperty) {\n\tthis.formProperty.removeItem(item);\n\tthis.updateButtonDisabledState()\n  }\n\n  trackByIndex(index: number, item: any) {\n    return index;\n  }\n\n\tupdateButtonDisabledState() {\n\t\tthis.buttonDisabledAdd = this.isAddButtonDisabled()\n\t\tthis.buttonDisabledRemove = this.isRemoveButtonDisabled()\n\t}\n\tisAddButtonDisabled() {\n\t\tif (this.schema.hasOwnProperty('maxItems') && Array.isArray(this.formProperty.properties)) {\n\t\t\tif (this.formProperty.properties.length >= this.schema.maxItems) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\tisRemoveButtonDisabled() {\n\t\tif (this.schema.hasOwnProperty('minItems') && Array.isArray(this.formProperty.properties)) {\n\t\t\tif (this.formProperty.properties.length <= this.schema.minItems) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n}\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: 'sf-button-widget',\n  template: '<button (click)=\"button.action($event)\">{{button.label}}</button>'\n})\nexport class ButtonWidget {\n  public button\n  public formProperty\n}\n","import { Component } from '@angular/core';\n\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-form-object',\n  template: `<fieldset *ngFor=\"let fieldset of formProperty.schema.fieldsets\">\n\t<legend *ngIf=\"fieldset.title\">{{fieldset.title}}</legend>\n\t<div *ngIf=\"fieldset.description\">{{fieldset.description}}</div>\n\t<div *ngFor=\"let fieldId of fieldset.fields\">\n\t\t<sf-form-element [formProperty]=\"formProperty.getProperty(fieldId)\"></sf-form-element>\n\t</div>\n</fieldset>`\n})\nexport class ObjectWidget extends ObjectLayoutWidget { }\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-checkbox-widget',\n  template: `<div class=\"widget form-group\">\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\n        {{ schema.title }}\n    </label>\n\t<div *ngIf=\"schema.type!='array'\" class=\"checkbox\">\n\t\t<label class=\"horizontal control-label\">\n\t\t\t<input [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id\" [indeterminate]=\"control.value !== false && control.value !== true ? true :null\" type=\"checkbox\" [disabled]=\"schema.readOnly\">\n\t\t\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n\t\t\t{{schema.description}}\n\t\t</label>\n\t</div>\n\t<ng-container *ngIf=\"schema.type==='array'\">\n\t\t<div *ngFor=\"let option of schema.items.oneOf\" class=\"checkbox\">\n\t\t\t<label class=\"horizontal control-label\">\n\t\t\t\t<input [attr.name]=\"name\"\n\t\t\t\t\tvalue=\"{{option.enum[0]}}\" type=\"checkbox\"\n\t\t\t\t\t[attr.disabled]=\"schema.readOnly\"\n\t\t\t\t\t(change)=\"onCheck($event.target)\"\n\t\t\t\t\t[attr.checked]=\"checked[option.enum[0]] ? true : null\"\n\t\t\t\t\t[attr.id]=\"id + '.' + option.enum[0]\"\n\t\t\t\t\t>\n\t\t\t\t{{option.description}}\n\t\t\t</label>\n\t\t</div>\n\t</ng-container>\n</div>`\n})\n// tslint:disable-next-line:component-class-suffix\nexport class CheckboxWidget extends ControlWidget implements AfterViewInit {\n\n\tchecked: any = {};\n\n\tngAfterViewInit() {\n\t\tconst control = this.control;\n\t\tthis.formProperty.valueChanges.subscribe((newValue) => {\n\t\t\tif (control.value !== newValue) {\n\t\t\t  this.checked = {}; // FIX: Reset the selections before reading from newValue.\n\t\t\t\tcontrol.setValue(newValue, { emitEvent: false });\n\t\t\t\tif (newValue && Array.isArray(newValue)) {\n\t\t\t\t\tnewValue.map(v => this.checked[v] = true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.formProperty.errorsChanges.subscribe((errors) => {\n\t\t\tcontrol.setErrors(errors, { emitEvent: true });\n\t\t});\n\t\tcontrol.valueChanges.subscribe((newValue) => {\n\t\t\tthis.formProperty.setValue(newValue, false);\n\t\t});\n\t}\n\n\tonCheck(el) {\n\t\tif (el.checked) {\n\t\t\tthis.checked[el.value] = true;\n\t\t} else {\n\t\t\tdelete this.checked[el.value];\n\t\t}\n\t\tthis.formProperty.setValue(Object.keys(this.checked), false);\n\t}\n}\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-file-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n  <input [name]=\"name\" class=\"text-widget file-widget\" [attr.id]=\"id\"\n    [formControl]=\"control\" type=\"file\" [attr.disabled]=\"schema.readOnly?true:null\"\n    (change)=\"onFileChange($event)\">\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>`\n})\nexport class FileWidget extends ControlWidget implements AfterViewInit {\n\n  protected reader = new FileReader();\n  protected filedata: any = {};\n\n  constructor() {\n    super();\n  }\n\n  ngAfterViewInit() {\n    // OVERRIDE ControlWidget ngAfterViewInit() as ReactiveForms do not handle\n    // file inputs\n    const control = this.control;\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, { emitEvent: true });\n    });\n\n    this.reader.onloadend = () => {\n      this.filedata.data = window.btoa((this.reader.result as string));\n      this.formProperty.setValue(this.filedata, false);\n    };\n  }\n\n  onFileChange($event) {\n    const file = $event.target.files[0];\n    this.filedata.filename = file.name;\n    this.filedata.size = file.size;\n    this.filedata['content-type'] = file.type;\n    this.filedata.encoding = 'base64';\n    this.reader.readAsBinaryString(file);\n  }\n}\n","import {\n  Component,\n} from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-integer-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n  <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<input [attr.readonly]=\"schema.readOnly?true:null\" [attr.name]=\"name\"\n\t[attr.id]=\"id\"\n\tclass=\"text-widget integer-widget form-control\" [formControl]=\"control\"\n\t[attr.type]=\"'number'\" [attr.min]=\"schema.minimum\" [attr.max]=\"schema.maximum\"\n\t[attr.placeholder]=\"schema.placeholder\"\n\t[attr.maxLength]=\"schema.maxLength || null\"\n  [attr.minLength]=\"schema.minLength || null\">\n</div>`\n})\nexport class IntegerWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-textarea-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<textarea [readonly]=\"schema.readOnly\" [name]=\"name\"\n\t\t[attr.id]=\"id\"\n\t\tclass=\"text-widget textarea-widget form-control\"\n\t\t[attr.placeholder]=\"schema.placeholder\"\n\t\t[attr.maxLength]=\"schema.maxLength || null\"\n    [attr.minLength]=\"schema.minLength || null\"\n\t\t[formControl]=\"control\"></textarea>\n</div>`\n})\nexport class TextAreaWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-radio-widget',\n  template: `<div class=\"widget form-group\">\n\t<label>{{schema.title}}</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<div *ngFor=\"let option of schema.oneOf\" class=\"radio\">\n\t\t<label class=\"horizontal control-label\">\n\t\t\t<input [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id + '.' + option.enum[0]\" value=\"{{option.enum[0]}}\" type=\"radio\"  [disabled]=\"schema.readOnly||option.readOnly\">\n\t\t\t{{option.description}}\n\t\t</label>\n\t</div>\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>`\n})\nexport class RadioWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-range-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\t\n\t<input [name]=\"name\" class=\"text-widget range-widget\" [attr.id]=\"id\"\n\t[formControl]=\"control\" [attr.type]=\"'range'\" [attr.min]=\"schema.minimum\" [attr.max]=\"schema.maximum\" [disabled]=\"schema.readOnly?true:null\" >\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\">\n</div>`\n})\nexport class RangeWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n\tselector: 'sf-select-widget',\n\ttemplate: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n\n\t<span *ngIf=\"schema.description\" class=\"formHelp\">\n\t\t{{schema.description}}\n\t</span>\n\n\t<select *ngIf=\"schema.type!='array'\" [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id\" [disabled]=\"schema.readOnly\" [disableControl]=\"schema.readOnly\" class=\"form-control\">\n\t\t<ng-container *ngIf=\"schema.oneOf; else use_enum\">\n\t\t\t<option *ngFor=\"let option of schema.oneOf\" [ngValue]=\"option.enum[0]\" >{{option.description}}</option>\n\t\t</ng-container>\n\t\t<ng-template #use_enum>\n\t\t\t<option *ngFor=\"let option of schema.enum\" [ngValue]=\"option\" >{{option}}</option>\n\t\t</ng-template>\n\t</select>\n\n\t<select *ngIf=\"schema.type==='array'\" multiple [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id\" [disabled]=\"schema.readOnly\" [disableControl]=\"schema.readOnly\" class=\"form-control\">\n    <option *ngFor=\"let option of schema.items.oneOf\" [ngValue]=\"option.enum[0]\" [disabled]=\"option.readOnly\">{{option.description}}</option>\n\t</select>\n\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>`\n})\nexport class SelectWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string-widget',\n  template: `<input *ngIf=\"this.schema.widget.id ==='hidden'; else notHiddenFieldBlock\"\n  [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n<ng-template #notHiddenFieldBlock>\n<div class=\"widget form-group\">\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\n    \t{{ schema.title }}\n    </label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n    <input [name]=\"name\" [attr.readonly]=\"(schema.widget.id!=='color') && schema.readOnly?true:null\"\n    class=\"text-widget.id textline-widget form-control\"\n    [attr.type]=\"!this.schema.widget.id || this.schema.widget.id === 'string' ? 'text' : this.schema.widget.id\"\n    [attr.id]=\"id\"  [formControl]=\"control\" [attr.placeholder]=\"schema.placeholder\"\n    [attr.maxLength]=\"schema.maxLength || null\"\n    [attr.minLength]=\"schema.minLength || null\"\n    [attr.required]=\"schema.isRequired || null\"\n    [attr.disabled]=\"(schema.widget.id=='color' && schema.readOnly)?true:null\">\n    <input *ngIf=\"(schema.widget.id==='color' && schema.readOnly)\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>\n</ng-template>`\n})\nexport class StringWidget extends ControlWidget {\n\n    getInputType() {\n        if (!this.schema.widget.id || this.schema.widget.id === 'string') {\n            return 'text';\n        } else {\n            return this.schema.widget.id;\n        }\n    }\n}\n","import { ArrayWidget } from './array/array.widget';\nimport { ButtonWidget } from './button/button.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { FileWidget } from './file/file.widget';\nimport { IntegerWidget } from './integer/integer.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RangeWidget } from './range/range.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TextAreaWidget } from './textarea/textarea.widget';\n\nimport { WidgetRegistry } from '../widgetregistry';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DefaultWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('array',  ArrayWidget);\n    this.register('object',  ObjectWidget);\n\n    this.register('string', StringWidget);\n    this.register('search', StringWidget);\n    this.register('tel', StringWidget);\n    this.register('url', StringWidget);\n    this.register('email', StringWidget);\n    this.register('password', StringWidget);\n    this.register('color', StringWidget);\n    this.register('date', StringWidget);\n    this.register('date-time', StringWidget);\n    this.register('time', StringWidget);\n\n    this.register('integer', IntegerWidget);\n    this.register('number', IntegerWidget);\n    this.register('range', RangeWidget);\n\n    this.register('textarea', TextAreaWidget);\n\n    this.register('file', FileWidget);\n    this.register('select', SelectWidget);\n    this.register('radio', RadioWidget);\n    this.register('boolean', CheckboxWidget);\n    this.register('checkbox', CheckboxWidget);\n\n    this.register('button', ButtonWidget);\n\n    this.setDefaultWidget(StringWidget);\n  }\n}\n","import { Input, Directive } from '@angular/core'\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n    selector: '[disableControl]'\n})\nexport class DisableControlDirective {\n\n    @Input() set disableControl(condition: boolean) {\n        const action = condition ? 'disable' : 'enable';\n        this.ngControl.control[action]();\n    }\n\n    constructor(private ngControl: NgControl) {\n    }\n\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'sf-default-field',\n  template: `<p>Unknow type</p>`\n})\nexport class DefaultWidget {}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms';\n\nimport {FormElementComponent} from './formelement.component';\nimport {FormComponent} from './form.component';\nimport {WidgetChooserComponent} from './widgetchooser.component';\nimport {ArrayWidget} from './defaultwidgets/array/array.widget';\nimport {ButtonWidget} from './defaultwidgets/button/button.widget';\nimport {ObjectWidget} from './defaultwidgets/object/object.widget';\nimport {CheckboxWidget} from './defaultwidgets/checkbox/checkbox.widget';\nimport {FileWidget} from './defaultwidgets/file/file.widget';\nimport {IntegerWidget} from './defaultwidgets/integer/integer.widget';\nimport {TextAreaWidget} from './defaultwidgets/textarea/textarea.widget';\nimport {RadioWidget} from './defaultwidgets/radio/radio.widget';\nimport {RangeWidget} from './defaultwidgets/range/range.widget';\nimport {SelectWidget} from './defaultwidgets/select/select.widget';\nimport {StringWidget} from './defaultwidgets/string/string.widget';\nimport {DefaultWidgetRegistry} from './defaultwidgets/defaultwidgetregistry';\nimport {DisableControlDirective} from './defaultwidgets/_directives/disableControl.directive';\n\nimport {\n  DefaultWidget\n} from './default.widget';\n\nimport {WidgetRegistry} from './widgetregistry';\nimport {SchemaValidatorFactory, ZSchemaValidatorFactory} from './schemavalidatorfactory';\nimport {FormElementComponentAction} from './formelement.action.component';\nimport {ExpressionCompilerFactory, JEXLExpressionCompilerFactory} from './expression-compiler-factory';\n\nimport { LOG_LEVEL, LogLevel, LogService, DefaultLogService } from './log.service';\n\nconst moduleProviders = [\n  {\n    provide: WidgetRegistry,\n    useClass: DefaultWidgetRegistry\n  },\n  {\n    provide: SchemaValidatorFactory,\n    useClass: ZSchemaValidatorFactory\n  },\n  {\n    provide: ExpressionCompilerFactory,\n    useClass: JEXLExpressionCompilerFactory\n  },\n  {\n    provide: LOG_LEVEL,\n    useValue: LogLevel.off\n  },\n  {\n    provide: LogService,\n    useClass: DefaultLogService\n  }\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  declarations: [\n    FormElementComponent,\n    FormElementComponentAction,\n    FormComponent,\n    WidgetChooserComponent,\n    DefaultWidget,\n    ArrayWidget,\n    ButtonWidget,\n    ObjectWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    TextAreaWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget,\n    DisableControlDirective\n  ],\n  entryComponents: [\n    FormElementComponent,\n    FormElementComponentAction,\n    FormComponent,\n    WidgetChooserComponent,\n    ArrayWidget,\n    ButtonWidget,\n    ObjectWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    TextAreaWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget\n  ],\n  exports: [\n    FormComponent,\n    FormElementComponent,\n    FormElementComponentAction,\n    WidgetChooserComponent,\n    ArrayWidget,\n    ButtonWidget,\n    ObjectWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    TextAreaWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget,\n    DisableControlDirective\n  ]\n})\nexport class SchemaFormModule {\n\n  static forRoot(): ModuleWithProviders<SchemaFormModule> {\n    return {\n      ngModule: SchemaFormModule,\n      providers: [...moduleProviders]\n    };\n  }\n\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable()\nexport class TemplateSchemaService {\n\n  changes = new EventEmitter();\n\n  constructor() { }\n\n  changed() {\n    this.changes.emit();\n  }\n\n}\n","import { ElementRef } from '@angular/core';\n\nexport class TemplateSchemaElement {\n\n  getTextContent(elementRef: ElementRef): string {\n    const nodes = Array.from(elementRef.nativeElement.childNodes);\n    const node = <HTMLElement>nodes.filter((el: HTMLElement) => {\n      return el.nodeType === el.TEXT_NODE;\n    }).pop();\n\n    if (!node || !node.nodeValue) {\n      return '';\n    }\n\n    return node.nodeValue.trim();\n  }\n\n}\n","import {\n  Component,\n  AfterContentInit,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  forwardRef\n} from '@angular/core';\n\nimport { TemplateSchemaElement } from '../template-schema-element';\n\n\n@Component({\n  selector: 'sf-button',\n  templateUrl: './button.component.html',\n  providers: [\n    {\n      provide: TemplateSchemaElement,\n      useExisting: forwardRef(() => ButtonComponent),\n    }\n  ]\n})\nexport class ButtonComponent extends TemplateSchemaElement implements AfterContentInit {\n\n  @Input()\n  id: string;\n\n  @Input()\n  label = '';\n\n  @Input()\n  widget: string | object;\n\n  @Output()\n  click = new EventEmitter<any>();\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  private setLabelFromContent() {\n    const textContent = this.getTextContent(this.elementRef);\n\n    // label as @Input takes priority over content text\n    if (textContent && !this.label) {\n      this.label = textContent;\n    }\n\n  }\n\n  ngAfterContentInit() {\n    this.setLabelFromContent();\n  }\n\n}\n","import { QueryList } from '@angular/core';\n\nimport { Validator } from '../../model/validator';\nimport { ActionRegistry } from '../../model/actionregistry';\nimport { ButtonComponent } from '../button/button.component';\nimport { TemplateSchemaElement } from '../template-schema-element';\n\nimport { Field, FieldType } from './field';\nimport {ISchema} from '../../model/ISchema';\n\nexport abstract class FieldParent extends TemplateSchemaElement {\n\n  name = '';\n  type: FieldType;\n\n  get path(): string {\n    if (!this.name) {\n      return '';\n    }\n\n    return '/' + this.name;\n  }\n\n  protected abstract actionRegistry: ActionRegistry;\n  protected abstract childButtons: QueryList<ButtonComponent>;\n\n\n  getButtons(): { id: string, label: string, widget?: string | object }[] {\n\n    return this.childButtons.map((button, index) => {\n\n      if (!button.id) {\n        const randomString = Math.random().toString(16).substr(2, 8);\n        // generate id for button\n        button.id = this.name + randomString + '_'  + (index + 1);\n      }\n\n      // register as button action the EventEmitter click\n      this.actionRegistry.register(\n        button.id,\n        button.click.emit.bind(button.click)\n      );\n\n      const _button = <any>{\n        id: button.id,\n        label: button.label,\n      };\n\n      if (button.widget) {\n        _button.widget = button.widget;\n      }\n\n      return _button;\n\n    });\n  }\n\n  protected getFieldsValidators(\n    fields: Field[]\n  ): { path: string, validator: Validator }[] {\n\n    return fields.reduce((validators, field) => {\n      return validators.concat(field.getValidators());\n    }, []);\n\n  }\n\n  protected getFieldsSchema(fields: Field[]): ISchema {\n    return fields.reduce((schema: ISchema, field: Field) => {\n\n      switch (this.type) {\n        case FieldType.Array:\n          schema.items = field.getSchema();\n          break;\n\n        default:\n          if (!schema.properties) {\n            schema.properties = {};\n          }\n\n          schema.properties[field.name] = field.getSchema();\n          break;\n      }\n\n      const buttons = field.getButtons();\n      if (buttons.length > 0) {\n        schema.buttons = buttons;\n      }\n\n      if (!field.required) {\n        return schema;\n      }\n\n      if (!schema.required) {\n        schema.required = [];\n      }\n      schema.required.push(field.name);\n      return schema;\n    }, {});\n  }\n\n}\n","import {\n Component,\n ElementRef,\n Input,\n OnInit,\n} from '@angular/core';\n\nimport { TemplateSchemaElement } from '../../template-schema-element';\n\n\n@Component({\n  selector: 'sf-item',\n  templateUrl: './item.component.html'\n})\nexport class ItemComponent extends TemplateSchemaElement implements OnInit {\n\n  @Input()\n  value: any;\n\n  description: string;\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.description = this.getTextContent(this.elementRef);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  AfterContentInit,\n  ContentChildren,\n  QueryList,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\n\nimport { ActionRegistry } from '../../model/actionregistry';\nimport { Validator } from '../../model/validator';\n\nimport { TemplateSchemaService } from '../template-schema.service';\nimport { ButtonComponent } from '../button/button.component';\n\nimport { FieldParent } from './field-parent';\nimport { FieldType, Field } from './field';\nimport { ItemComponent } from './item/item.component';\nimport { merge } from 'rxjs';\nimport {ISchema} from '../../model/ISchema';\n\n\n@Component({\n  selector: 'sf-field',\n  templateUrl: './field.component.html'\n})\nexport class FieldComponent extends FieldParent implements\nField, OnChanges, AfterContentInit {\n\n  @ContentChildren(FieldComponent)\n  childFields: QueryList<FieldComponent>;\n\n  @ContentChildren(ItemComponent)\n  childItems: QueryList<ItemComponent>;\n\n  @ContentChildren(ButtonComponent)\n  childButtons: QueryList<ButtonComponent>;\n\n  @Input()\n  name: string;\n\n  @Input()\n  type = FieldType.String;\n\n  @Input()\n  format: string;\n\n  @Input()\n  required: boolean;\n\n  @Input()\n  readOnly: boolean;\n\n  @Input()\n  title: string;\n\n  @Input()\n  description: string;\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  widget: string | object;\n\n  @Input()\n  validator: Validator;\n\n  @Input()\n  schema: ISchema = { };\n\n  constructor(\n    private elementRef: ElementRef,\n    private templateSchemaService: TemplateSchemaService,\n    protected actionRegistry: ActionRegistry\n  ) {\n    super();\n  }\n\n  getSchema(): ISchema {\n\n    const { properties, items, required } = this.getFieldsSchema(\n      this.childFields.filter(field => field !== this)\n    );\n\n    const oneOf = this.getOneOf();\n\n    const schema: ISchema = {\n      type: this.type\n    };\n\n    if (this.title !== undefined) {\n      schema.title = this.title;\n    }\n\n    if (properties !== undefined) {\n      schema.properties = properties;\n    }\n\n    if (items !== undefined) {\n      schema.items = items;\n    }\n\n    // requried child fields\n    if (required !== undefined) {\n      schema.required = required;\n    }\n\n    if (oneOf !== undefined) {\n      schema.oneOf = oneOf;\n    }\n\n    if (this.description !== undefined) {\n      schema.description = this.description;\n    }\n\n    if (this.placeholder !== undefined) {\n      schema.placeholder = this.placeholder;\n    }\n\n    if (this.format !== undefined) {\n      schema.format = this.format;\n    }\n\n    if (this.widget !== undefined) {\n      schema.widget = this.widget;\n    }\n\n    if (this.readOnly !== undefined) {\n      schema.readOnly = this.readOnly;\n    }\n\n    const buttons = this.getButtons();\n    if (buttons.length > 0) {\n      schema.buttons = buttons;\n    }\n\n    // @Input schema takes precedence\n    return Object.assign(schema, this.schema);\n\n  }\n\n  getValidators(): { path: string, validator: Validator }[] {\n\n    // registering validator here is not possible since prop full path is needed\n    const childValidators = this.getFieldsValidators(\n      this.childFields.filter(field => field !== this)\n    );\n    const validators = childValidators.map(({ path, validator }) => {\n      return {\n        path: this.path + path,\n        validator\n      };\n    });\n\n    if (!this.validator) {\n      return validators;\n    }\n\n    validators.push({ path: this.path, validator: this.validator });\n    return validators;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    const keys = Object.keys(changes);\n    if (keys.length > 0) {\n      for (const key of keys) {\n        if (!changes[key].isFirstChange()) {\n          // on any input change, force schema change generation\n          this.templateSchemaService.changed();\n          break;\n        }\n      }\n    }\n\n  }\n\n\n  private getOneOf() {\n\n    if (this.childItems.length === 0) {\n      return;\n    }\n\n    const items = this.childItems.map(({ value, description }) => {\n      if (!Array.isArray(value)) {\n        return { enum: [value], description };\n      }\n\n      return { enum: value, description };\n    });\n\n    if (items.length === 0) {\n      return;\n    }\n\n    return items;\n  }\n\n\n  private setTitleFromContent() {\n    const textContent = this.getTextContent(this.elementRef);\n\n    //  title as @Input takes priority over content text\n    if (textContent && !this.title) {\n      this.title = textContent;\n    }\n  }\n\n  ngAfterContentInit() {\n\n    // cache it\n    this.setTitleFromContent();\n\n    merge(\n      this.childFields.changes,\n      this.childItems.changes,\n      this.childButtons.changes\n    )\n    .subscribe(() => this.templateSchemaService.changed());\n  }\n\n}\n","import {\n  Directive,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  SimpleChange,\n} from '@angular/core';\nimport { merge } from 'rxjs';\n\nimport { FormComponent } from '../form.component';\nimport { ActionRegistry } from '../model/actionregistry';\nimport { ValidatorRegistry } from '../model/validatorregistry';\nimport { TerminatorService } from '../terminator.service';\n\nimport { TemplateSchemaService } from './template-schema.service';\nimport { FieldComponent } from './field/field.component';\nimport { FieldType } from './field/field';\nimport { ButtonComponent } from './button/button.component';\nimport { FieldParent } from './field/field-parent';\nimport {ISchema} from '../model/ISchema';\n\n\n@Directive({\n  selector: 'sf-form[templateSchema]',\n  providers: [\n    TemplateSchemaService\n  ]\n})\nexport class TemplateSchemaDirective extends FieldParent implements AfterContentInit {\n\n  @ContentChildren(FieldComponent)\n  childFields: QueryList<FieldComponent>;\n\n  @ContentChildren(ButtonComponent)\n  childButtons: QueryList<ButtonComponent>;\n\n  constructor(\n    protected actionRegistry: ActionRegistry,\n    protected validatorRegistry: ValidatorRegistry,\n    private formComponent: FormComponent,\n    private terminatorService: TerminatorService,\n    private templateSchemaService: TemplateSchemaService\n  ) {\n    super();\n  }\n\n  setFormDocumentSchema(fields: FieldComponent[]) {\n      this.actionRegistry.clear();\n      this.validatorRegistry.clear();\n\n      const schema: ISchema = this.getFieldsSchema(fields);\n\n      const validators = this.getFieldsValidators(fields);\n      validators.forEach(({ path, validator }) => {\n        this.validatorRegistry.register(path, validator);\n      });\n\n      const previousSchema: ISchema = this.formComponent.schema;\n      this.formComponent.schema = {\n        type: FieldType.Object,\n        properties: schema.properties\n      };\n\n      if (schema.required && schema.required.length > 0) {\n        this.formComponent.schema.requred = schema.required;\n      }\n\n      const buttons = this.getButtons();\n      if (buttons.length > 0) {\n        this.formComponent.schema.buttons = buttons;\n      }\n\n      this.formComponent.ngOnChanges({\n        schema: new SimpleChange(\n          previousSchema,\n          this.formComponent.schema,\n          Boolean(previousSchema)\n        )\n      });\n\n  }\n\n\n  ngAfterContentInit() {\n\n    if (this.childFields.length > 0) {\n      this.setFormDocumentSchema(this.childFields.toArray());\n    }\n\n    merge(\n      this.childFields.changes,\n      this.templateSchemaService.changes\n    )\n   .subscribe(() => {\n      this.terminatorService.destroy();\n      this.setFormDocumentSchema(this.childFields.toArray());\n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FieldComponent } from './field/field.component';\nimport { TemplateSchemaDirective } from './template-schema.directive';\nimport { ButtonComponent } from './button/button.component';\nimport { ItemComponent } from './field/item/item.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    TemplateSchemaDirective,\n    FieldComponent,\n    ButtonComponent,\n    ItemComponent\n  ],\n  exports: [\n    TemplateSchemaDirective,\n    FieldComponent,\n    ButtonComponent,\n    ItemComponent\n  ]\n})\nexport class TemplateSchemaModule { }\n","/*\n * Public API Surface of schema-form\n */\n\n// export * from './lib/index';\nexport { FormComponent } from './lib/form.component';\nexport { FormElementComponent } from './lib/formelement.component';\nexport { FormElementComponentAction } from './lib/formelement.action.component';\nexport { WidgetChooserComponent } from './lib/widgetchooser.component';\nexport { WidgetRegistry } from './lib/widgetregistry';\nexport {\n  Action,\n  ActionRegistry,\n  Binding,\n  BindingRegistry,\n  FormPropertyFactory,\n  FormProperty,\n  PropertyGroup,\n  AtomicProperty,\n  ObjectProperty,  \n  ArrayProperty,\n  StringProperty,\n  BooleanProperty,\n  NumberProperty,  \n  Validator,\n  ValidatorRegistry,\n  SchemaPreprocessor,\n  // <schema def>\n  IButton,\n  IFieldSet,\n  IOneOf,\n  IProperties,\n  ISchema,\n  IWidget\n  // </schema def>\n} from './lib/model';\nexport {\n  SchemaValidatorFactory,\n  ZSchemaValidatorFactory\n} from './lib/schemavalidatorfactory';\nexport { \n  ExpressionCompilerFactory, \n  ExpressionCompiler, \n  ExpressionCompilerVisibilityIf, \n  ExpressionContextVisibilitIf,\n  JEXLExpressionCompilerFactory,\n  JEXLExpressionCompiler,\n  JEXLExpressionCompilerVisibiltyIf\n} from './lib/expression-compiler-factory';\nexport { WidgetFactory } from './lib/widgetfactory';\nexport { TerminatorService } from './lib/terminator.service';\nexport {\n  Widget,\n  ControlWidget,\n  ArrayLayoutWidget,\n  ObjectLayoutWidget\n} from './lib/widget';\n\nexport { ArrayWidget } from './lib/defaultwidgets/array/array.widget';\nexport { ButtonWidget } from './lib/defaultwidgets/button/button.widget';\nexport { ObjectWidget } from './lib/defaultwidgets/object/object.widget';\nexport { CheckboxWidget } from './lib/defaultwidgets/checkbox/checkbox.widget';\nexport { FileWidget } from './lib/defaultwidgets/file/file.widget';\nexport { IntegerWidget } from './lib/defaultwidgets/integer/integer.widget';\nexport { TextAreaWidget } from './lib/defaultwidgets/textarea/textarea.widget';\nexport { RadioWidget } from './lib/defaultwidgets/radio/radio.widget';\nexport { RangeWidget } from './lib/defaultwidgets/range/range.widget';\nexport { SelectWidget } from './lib/defaultwidgets/select/select.widget';\nexport { StringWidget } from './lib/defaultwidgets/string/string.widget';\nexport {\n  DefaultWidgetRegistry\n} from './lib/defaultwidgets/defaultwidgetregistry';\nexport { DisableControlDirective } from './lib/defaultwidgets/_directives/disableControl.directive'\n\nexport { SchemaFormModule } from './lib/schema-form.module';\nexport {\n  TemplateSchemaModule\n} from './lib/template-schema/template-schema.module';\nexport { LogService, LogLevel, LOG_LEVEL } from './lib/log.service';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {DefaultWidget as ɵf} from './lib/default.widget';\nexport {useFactory as ɵa} from './lib/form.component';\nexport {DefaultLogService as ɵb} from './lib/log.service';\nexport {ActionRegistry as ɵd} from './lib/model/actionregistry';\nexport {BindingRegistry as ɵe} from './lib/model/bindingregistry';\nexport {ValidatorRegistry as ɵn} from './lib/model/validatorregistry';\nexport {PropertyBindingRegistry as ɵc} from './lib/property-binding-registry';\nexport {ButtonComponent as ɵm} from './lib/template-schema/button/button.component';\nexport {FieldParent as ɵh} from './lib/template-schema/field/field-parent';\nexport {FieldComponent as ɵk} from './lib/template-schema/field/field.component';\nexport {ItemComponent as ɵl} from './lib/template-schema/field/item/item.component';\nexport {TemplateSchemaElement as ɵi} from './lib/template-schema/template-schema-element';\nexport {TemplateSchemaDirective as ɵg} from './lib/template-schema/template-schema.directive';\nexport {TemplateSchemaService as ɵj} from './lib/template-schema/template-schema.service';"],"names":["Injectable","BehaviorSubject","map","combineLatest","distinctUntilChanged","ZSchema","ComponentFactoryResolver","Subject","JEXL.Jexl","InjectionToken","Optional","Inject","EventEmitter","Component","NG_VALUE_ACCESSOR","ChangeDetectorRef","Input","Output","FormControl","Renderer2","ElementRef","ViewChild","ViewContainerRef","Directive","NgControl","NgModule","CommonModule","FormsModule","ReactiveFormsModule","forwardRef","merge","ContentChildren","SimpleChange"],"mappings":"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"}